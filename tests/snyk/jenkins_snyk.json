{
  "vulnerabilities": [
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "alternativeIds": [],
      "creationTime": "2018-04-25T07:28:15.755000Z",
      "credit": [
        "Apostolos Giannakidis"
      ],
      "cvssScore": 5.9,
      "description": "## Overview\r\n[com.google.guava:guava](https://github.com/google/guava) is a set of core libraries that includes new collection types (such as multimap and multiset,immutable collections, a graph library, functional types, an in-memory cache and more.\r\n\r\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. \r\n\r\nDuring deserialization, two Guava classes accept a caller-specified size parameter and eagerly allocate an array of that size:\r\n* `AtomicDoubleArray` (when serialized with Java serialization)\r\n* `CompoundOrdering` (when serialized with GWT serialization)\r\n\r\nAn attacker may be able to send a specially crafted request which with then cause the server to allocate all it's memory, without validation whether the data size is reasonable.\r\n\r\n## Details\r\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\r\n\r\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\r\n\r\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\r\n\r\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\r\n\r\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\r\n- Apache Blog\r\n\r\nThe vulnerability, also know as _Mad Gadget_\r\n> Mad Gadget is one of the most pernicious vulnerabilities we’ve seen. By merely existing on the Java classpath, seven “gadget” classes in Apache Commons Collections (versions 3.0, 3.1, 3.2, 3.2.1, and 4.0) make object deserialization for the entire JVM process Turing complete with an exec function. Since many business applications use object deserialization to send messages across the network, it would be like hiring a bank teller who was trained to hand over all the money in the vault if asked to do so politely, and then entrusting that teller with the key. The only thing that would keep a bank safe in such a circumstance is that most people wouldn’t consider asking such a question.\r\n- Google\r\n\r\n## Remediation\r\nUpgrade `com.google.guava:guava` to version 24.1.1-jre, 24.1.1-android or higher.\n\n## References\n- [GitHub Commit](https://github.com/google/guava/commit/7ec8718f1e6e2814dabaa4b9f96b6b33a813101c)\n- [Google Group Forum](https://groups.google.com/forum/#!topic/guava-announce/xqWALw4W1vs/discussion)\n- [RedHat Bugzilla](https://bugzilla.redhat.com/show_bug.cgi?id=1573391)\n",
      "disclosureTime": "2018-04-25T07:28:15Z",
      "fixedIn": [
        "24.1.1-android",
        "24.1.1-jre"
      ],
      "functions": [
        {
          "functionId": {
            "className": "AtomicDoubleArray",
            "filePath": "com/google/common/util/concurrent/AtomicDoubleArray.java",
            "functionName": "readObject"
          },
          "version": [
            "[11.0, 24.1.1-android)",
            "(24.1.1-android, 24.1.1-jre)"
          ]
        }
      ],
      "id": "SNYK-JAVA-COMGOOGLEGUAVA-32236",
      "identifiers": {
        "CVE": [
          "CVE-2018-10237"
        ],
        "CWE": [
          "CWE-119"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "guava",
        "groupId": "com.google.guava"
      },
      "modificationTime": "2019-04-02T15:42:13.776477Z",
      "moduleName": "com.google.guava:guava",
      "packageManager": "maven",
      "packageName": "com.google.guava:guava",
      "patches": [],
      "publicationTime": "2018-05-02T13:38:04Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/google/guava/commit/7ec8718f1e6e2814dabaa4b9f96b6b33a813101c"
        },
        {
          "title": "RedHat Bugzilla",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1573391"
        },
        {
          "title": "Google Group Forum",
          "url": "https://groups.google.com/forum/#!topic/guava-announce/xqWALw4W1vs/discussion"
        }
      ],
      "semver": {
        "vulnerable": [
          "[11.0, 24.1.1-android)",
          "(24.1.1-android, 24.1.1-jre)"
        ]
      },
      "severity": "medium",
      "title": "Deserialization of Untrusted Data",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "com.google.guava:guava@11.0.1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "com.google.guava:guava",
      "version": "11.0.1"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "alternativeIds": [],
      "creationTime": "2018-04-25T07:28:15.755000Z",
      "credit": [
        "Apostolos Giannakidis"
      ],
      "cvssScore": 5.9,
      "description": "## Overview\r\n[com.google.guava:guava](https://github.com/google/guava) is a set of core libraries that includes new collection types (such as multimap and multiset,immutable collections, a graph library, functional types, an in-memory cache and more.\r\n\r\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. \r\n\r\nDuring deserialization, two Guava classes accept a caller-specified size parameter and eagerly allocate an array of that size:\r\n* `AtomicDoubleArray` (when serialized with Java serialization)\r\n* `CompoundOrdering` (when serialized with GWT serialization)\r\n\r\nAn attacker may be able to send a specially crafted request which with then cause the server to allocate all it's memory, without validation whether the data size is reasonable.\r\n\r\n## Details\r\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\r\n\r\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\r\n\r\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\r\n\r\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\r\n\r\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\r\n- Apache Blog\r\n\r\nThe vulnerability, also know as _Mad Gadget_\r\n> Mad Gadget is one of the most pernicious vulnerabilities we’ve seen. By merely existing on the Java classpath, seven “gadget” classes in Apache Commons Collections (versions 3.0, 3.1, 3.2, 3.2.1, and 4.0) make object deserialization for the entire JVM process Turing complete with an exec function. Since many business applications use object deserialization to send messages across the network, it would be like hiring a bank teller who was trained to hand over all the money in the vault if asked to do so politely, and then entrusting that teller with the key. The only thing that would keep a bank safe in such a circumstance is that most people wouldn’t consider asking such a question.\r\n- Google\r\n\r\n## Remediation\r\nUpgrade `com.google.guava:guava` to version 24.1.1-jre, 24.1.1-android or higher.\n\n## References\n- [GitHub Commit](https://github.com/google/guava/commit/7ec8718f1e6e2814dabaa4b9f96b6b33a813101c)\n- [Google Group Forum](https://groups.google.com/forum/#!topic/guava-announce/xqWALw4W1vs/discussion)\n- [RedHat Bugzilla](https://bugzilla.redhat.com/show_bug.cgi?id=1573391)\n",
      "disclosureTime": "2018-04-25T07:28:15Z",
      "fixedIn": [
        "24.1.1-android",
        "24.1.1-jre"
      ],
      "functions": [
        {
          "functionId": {
            "className": "AtomicDoubleArray",
            "filePath": "com/google/common/util/concurrent/AtomicDoubleArray.java",
            "functionName": "readObject"
          },
          "version": [
            "[11.0, 24.1.1-android)",
            "(24.1.1-android, 24.1.1-jre)"
          ]
        }
      ],
      "id": "SNYK-JAVA-COMGOOGLEGUAVA-32236",
      "identifiers": {
        "CVE": [
          "CVE-2018-10237"
        ],
        "CWE": [
          "CWE-119"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "guava",
        "groupId": "com.google.guava"
      },
      "modificationTime": "2019-04-02T15:42:13.776477Z",
      "moduleName": "com.google.guava:guava",
      "packageManager": "maven",
      "packageName": "com.google.guava:guava",
      "patches": [],
      "publicationTime": "2018-05-02T13:38:04Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/google/guava/commit/7ec8718f1e6e2814dabaa4b9f96b6b33a813101c"
        },
        {
          "title": "RedHat Bugzilla",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1573391"
        },
        {
          "title": "Google Group Forum",
          "url": "https://groups.google.com/forum/#!topic/guava-announce/xqWALw4W1vs/discussion"
        }
      ],
      "semver": {
        "vulnerable": [
          "[11.0, 24.1.1-android)",
          "(24.1.1-android, 24.1.1-jre)"
        ]
      },
      "severity": "medium",
      "title": "Deserialization of Untrusted Data",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "com.google.guava:guava@11.0.1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "com.google.guava:guava",
      "version": "11.0.1"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
      "alternativeIds": [],
      "creationTime": "2017-02-22T07:28:17.516000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.9,
      "description": "## Overview\r\n[`com.jcraft:jsch`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22jsch%22) is a pure Java implementation of SSH2.\r\nDirectory traversal vulnerability in JCraft JSch before 0.1.54 on Windows, when the mode is `ChannelSftp.OVERWRITE`, allows remote SFTP servers to write to arbitrary files via a `..\\` (dot dot backslash) in a response to a recursive GET command.\r\n\r\n## Details\r\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\r\n\r\nDirectory Traversal vulnerabilities can be generally divided into two types:\r\n\r\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\r\n\r\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\r\n\r\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\r\n\r\n```\r\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\r\n```\r\n**Note** `%2e` is the URL encoded version of `.` (dot).\r\n\r\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \r\n\r\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\r\n\r\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\r\n\r\n```\r\n2018-04-15 22:04:29 .....           19           19  good.txt\r\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\r\n```\r\n\r\n\r\n## References\r\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-5725)\r\n- [GitHub Vulnerability description](https://github.com/tintinweb/pub/tree/master/pocs/cve-2016-5725)",
      "disclosureTime": "2016-09-13T06:45:18Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-COMJCRAFT-30302",
      "identifiers": {
        "CVE": [
          "CVE-2016-5725"
        ],
        "CWE": [
          "CWE-22"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "jsch",
        "groupId": "com.jcraft"
      },
      "modificationTime": "2019-02-06T08:03:06.458037Z",
      "moduleName": "com.jcraft:jsch",
      "packageManager": "maven",
      "packageName": "com.jcraft:jsch",
      "patches": [],
      "publicationTime": "2017-03-28T08:29:28Z",
      "references": [
        {
          "title": "NVD",
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-5725"
        },
        {
          "title": "GitHub Vulnerability description",
          "url": "https://github.com/tintinweb/pub/tree/master/pocs/cve-2016-5725"
        }
      ],
      "semver": {
        "vulnerable": [
          "[0.1.29,0.1.53]"
        ]
      },
      "severity": "medium",
      "title": "Directory Traversal",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.apache.maven.wagon:wagon-ssh@2.4",
        "com.jcraft:jsch@0.1.44-1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "com.jcraft:jsch",
      "version": "0.1.44-1"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
      "alternativeIds": [],
      "creationTime": "2017-02-22T07:28:17.516000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.9,
      "description": "## Overview\r\n[`com.jcraft:jsch`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22jsch%22) is a pure Java implementation of SSH2.\r\nDirectory traversal vulnerability in JCraft JSch before 0.1.54 on Windows, when the mode is `ChannelSftp.OVERWRITE`, allows remote SFTP servers to write to arbitrary files via a `..\\` (dot dot backslash) in a response to a recursive GET command.\r\n\r\n## Details\r\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\r\n\r\nDirectory Traversal vulnerabilities can be generally divided into two types:\r\n\r\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\r\n\r\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\r\n\r\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\r\n\r\n```\r\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\r\n```\r\n**Note** `%2e` is the URL encoded version of `.` (dot).\r\n\r\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \r\n\r\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\r\n\r\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\r\n\r\n```\r\n2018-04-15 22:04:29 .....           19           19  good.txt\r\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\r\n```\r\n\r\n\r\n## References\r\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-5725)\r\n- [GitHub Vulnerability description](https://github.com/tintinweb/pub/tree/master/pocs/cve-2016-5725)",
      "disclosureTime": "2016-09-13T06:45:18Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-COMJCRAFT-30302",
      "identifiers": {
        "CVE": [
          "CVE-2016-5725"
        ],
        "CWE": [
          "CWE-22"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "jsch",
        "groupId": "com.jcraft"
      },
      "modificationTime": "2019-02-06T08:03:06.458037Z",
      "moduleName": "com.jcraft:jsch",
      "packageManager": "maven",
      "packageName": "com.jcraft:jsch",
      "patches": [],
      "publicationTime": "2017-03-28T08:29:28Z",
      "references": [
        {
          "title": "NVD",
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-5725"
        },
        {
          "title": "GitHub Vulnerability description",
          "url": "https://github.com/tintinweb/pub/tree/master/pocs/cve-2016-5725"
        }
      ],
      "semver": {
        "vulnerable": [
          "[0.1.29,0.1.53]"
        ]
      },
      "severity": "medium",
      "title": "Directory Traversal",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.apache.maven.wagon:wagon-ssh@2.4",
        "com.jcraft:jsch@0.1.44-1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "com.jcraft:jsch",
      "version": "0.1.44-1"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2016-12-25T16:51:51Z",
      "credit": [
        "Alvaro Munoz"
      ],
      "cvssScore": 7.3,
      "description": "## Overview\r\n[`commons-beanutils:commons-beanutils`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22commons-beanutils%22)\r\n\r\nVulnerable versions of _Apache Commons BeanUtils_, do not suppress the class property, which allows remote attackers to manipulate the `ClassLoader` and execute arbitrary code via the class parameter, as demonstrated by the passing of this parameter to the `getClass` method of the `ActionForm` object in Struts 1.\r\n\r\n# Details\r\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\r\n\r\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution. \r\n\r\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\r\n\r\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\r\n\r\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\r\n- Apache Blog\r\n\r\nThe vulnerability, also know as _Mad Gadget_ \r\n> Mad Gadget is one of the most pernicious vulnerabilities we’ve seen. By merely existing on the Java classpath, seven “gadget” classes in Apache Commons Collections (versions 3.0, 3.1, 3.2, 3.2.1, and 4.0) make object deserialization for the entire JVM process Turing complete with an exec function. Since many business applications use object deserialization to send messages across the network, it would be like hiring a bank teller who was trained to hand over all the money in the vault if asked to do so politely, and then entrusting that teller with the key. The only thing that would keep a bank safe in such a circumstance is that most people wouldn’t consider asking such a question.\r\n- Google \r\n\r\n## References\r\n- [Alvaro Munoz Blog](http://h30499.www3.hp.com/t5/HP-Security-Research-Blog/Protect-your-Struts1-applications/ba-p/6463188#.U2J7xeaSxro)\r\n- [CVE](http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0114)\r\n- [Redhat Bugzilla](https://bugzilla.redhat.com/show_bug.cgi?id=1091938)",
      "disclosureTime": "2014-05-01T16:51:51Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-COMMONSBEANUTILS-30077",
      "identifiers": {
        "CVE": [
          "CVE-2014-0114"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "commons-beanutils",
        "groupId": "commons-beanutils"
      },
      "modificationTime": "2018-12-05T11:21:45.051760Z",
      "moduleName": "commons-beanutils:commons-beanutils",
      "packageManager": "maven",
      "packageName": "commons-beanutils:commons-beanutils",
      "patches": [],
      "publicationTime": "2014-05-01T16:51:51Z",
      "references": [
        {
          "title": "Alvaro Munoz Blog",
          "url": "http://h30499.www3.hp.com/t5/HP-Security-Research-Blog/Protect-your-Struts1-applications/ba-p/6463188#.U2J7xeaSxro"
        },
        {
          "title": "CVE",
          "url": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0114"
        },
        {
          "title": "Redhat Bugzilla",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1091938"
        }
      ],
      "semver": {
        "vulnerable": [
          "(,1.9.1]"
        ]
      },
      "severity": "high",
      "title": "Arbitrary Code Execution",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "commons-beanutils:commons-beanutils@1.8.3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "commons-beanutils:commons-beanutils",
      "version": "1.8.3"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2016-12-25T16:51:51Z",
      "credit": [
        "Alvaro Munoz"
      ],
      "cvssScore": 7.3,
      "description": "## Overview\r\n[`commons-beanutils:commons-beanutils`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22commons-beanutils%22)\r\n\r\nVulnerable versions of _Apache Commons BeanUtils_, do not suppress the class property, which allows remote attackers to manipulate the `ClassLoader` and execute arbitrary code via the class parameter, as demonstrated by the passing of this parameter to the `getClass` method of the `ActionForm` object in Struts 1.\r\n\r\n# Details\r\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\r\n\r\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution. \r\n\r\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\r\n\r\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\r\n\r\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\r\n- Apache Blog\r\n\r\nThe vulnerability, also know as _Mad Gadget_ \r\n> Mad Gadget is one of the most pernicious vulnerabilities we’ve seen. By merely existing on the Java classpath, seven “gadget” classes in Apache Commons Collections (versions 3.0, 3.1, 3.2, 3.2.1, and 4.0) make object deserialization for the entire JVM process Turing complete with an exec function. Since many business applications use object deserialization to send messages across the network, it would be like hiring a bank teller who was trained to hand over all the money in the vault if asked to do so politely, and then entrusting that teller with the key. The only thing that would keep a bank safe in such a circumstance is that most people wouldn’t consider asking such a question.\r\n- Google \r\n\r\n## References\r\n- [Alvaro Munoz Blog](http://h30499.www3.hp.com/t5/HP-Security-Research-Blog/Protect-your-Struts1-applications/ba-p/6463188#.U2J7xeaSxro)\r\n- [CVE](http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0114)\r\n- [Redhat Bugzilla](https://bugzilla.redhat.com/show_bug.cgi?id=1091938)",
      "disclosureTime": "2014-05-01T16:51:51Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-COMMONSBEANUTILS-30077",
      "identifiers": {
        "CVE": [
          "CVE-2014-0114"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "commons-beanutils",
        "groupId": "commons-beanutils"
      },
      "modificationTime": "2018-12-05T11:21:45.051760Z",
      "moduleName": "commons-beanutils:commons-beanutils",
      "packageManager": "maven",
      "packageName": "commons-beanutils:commons-beanutils",
      "patches": [],
      "publicationTime": "2014-05-01T16:51:51Z",
      "references": [
        {
          "title": "Alvaro Munoz Blog",
          "url": "http://h30499.www3.hp.com/t5/HP-Security-Research-Blog/Protect-your-Struts1-applications/ba-p/6463188#.U2J7xeaSxro"
        },
        {
          "title": "CVE",
          "url": "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0114"
        },
        {
          "title": "Redhat Bugzilla",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1091938"
        }
      ],
      "semver": {
        "vulnerable": [
          "(,1.9.1]"
        ]
      },
      "severity": "high",
      "title": "Arbitrary Code Execution",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "commons-beanutils:commons-beanutils@1.8.3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "commons-beanutils:commons-beanutils",
      "version": "1.8.3"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2016-12-25T16:51:47Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.4,
      "description": "## Overview\n[`commons-httpclient:commons-httpclient`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22commons-httpclient%22) is a component of the Apache HttpComponents project.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle attacks due to not verifying that the requesting server hostname matches a domain name in the subject's `Common Name (CN)` or `subjectAltName` field of the X.509 certificate. This allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.\n\n## Remediation\nThere is no fix version for `commons-httpclient:commons-httpclient`.\n\n## References\n- [The University of Texas](http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf)\n- [X-Force Vulnerability Report](https://exchange.xforce.ibmcloud.com/vulnerabilities/79984)\n- [Jira Issue](https://issues.apache.org/jira/browse/HTTPCLIENT-1265)\n",
      "disclosureTime": "2013-03-25T16:51:47Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-COMMONSHTTPCLIENT-30083",
      "identifiers": {
        "CVE": [
          "CVE-2012-5783"
        ],
        "CWE": [
          "CWE-295"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "commons-httpclient",
        "groupId": "commons-httpclient"
      },
      "modificationTime": "2018-11-22T10:10:08.532511Z",
      "moduleName": "commons-httpclient:commons-httpclient",
      "packageManager": "maven",
      "packageName": "commons-httpclient:commons-httpclient",
      "patches": [],
      "publicationTime": "2013-03-25T16:51:47Z",
      "references": [
        {
          "title": "The University of Texas",
          "url": "http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf"
        },
        {
          "title": "X-Force Vulnerability Report",
          "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/79984"
        },
        {
          "title": "Jira Issue",
          "url": "https://issues.apache.org/jira/browse/HTTPCLIENT-1265"
        }
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "severity": "medium",
      "title": "Improper Certificate Validation",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "commons-httpclient:commons-httpclient@3.1-jenkins-1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "commons-httpclient:commons-httpclient",
      "version": "3.1-jenkins-1"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2017-02-22T07:28:21.771000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 4.3,
      "description": "## Overview\n[`commons-httpclient:commons-httpclient`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22httpclient%22) is HttpClient component of the Apache HttpComponents project.\n\nAffected versions of this project are vulnerable to Man-in-the-Middle (MitM) attacks because it does not verify the requesting server's hostname agains existing domain names in the SSL Certificate. The `AbstractVerifier` does not properly verify that the server hostname matches a domain name in the subject's `Common Name (CN)` or `subjectAltName` field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a certificate with a subject that specifies a common name in a field that is not the CN field.  \n\n**NOTE:** this issue exists because of an incomplete fix for [CVE-2012-5783](SNYK-JAVA-COMMONSHTTPCLIENT-30083).\n\n## Remediation\nThere is no fix version for commons-httpclient:commons-httpclient.\n\n## References\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-6153)\n",
      "disclosureTime": "2014-09-07T12:18:36Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-COMMONSHTTPCLIENT-31660",
      "identifiers": {
        "CVE": [
          "CVE-2012-6153"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "commons-httpclient",
        "groupId": "commons-httpclient"
      },
      "modificationTime": "2018-11-22T10:10:09.160297Z",
      "moduleName": "commons-httpclient:commons-httpclient",
      "packageManager": "maven",
      "packageName": "commons-httpclient:commons-httpclient",
      "patches": [],
      "publicationTime": "2018-04-08T12:56:14.007000Z",
      "references": [
        {
          "title": "NVD",
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-6153"
        }
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "severity": "medium",
      "title": "Man-in-the-Middle (MitM)",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "commons-httpclient:commons-httpclient@3.1-jenkins-1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "commons-httpclient:commons-httpclient",
      "version": "3.1-jenkins-1"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2016-12-25T16:51:47Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.4,
      "description": "## Overview\n[`commons-httpclient:commons-httpclient`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22commons-httpclient%22) is a component of the Apache HttpComponents project.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle attacks due to not verifying that the requesting server hostname matches a domain name in the subject's `Common Name (CN)` or `subjectAltName` field of the X.509 certificate. This allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.\n\n## Remediation\nThere is no fix version for `commons-httpclient:commons-httpclient`.\n\n## References\n- [The University of Texas](http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf)\n- [X-Force Vulnerability Report](https://exchange.xforce.ibmcloud.com/vulnerabilities/79984)\n- [Jira Issue](https://issues.apache.org/jira/browse/HTTPCLIENT-1265)\n",
      "disclosureTime": "2013-03-25T16:51:47Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-COMMONSHTTPCLIENT-30083",
      "identifiers": {
        "CVE": [
          "CVE-2012-5783"
        ],
        "CWE": [
          "CWE-295"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "commons-httpclient",
        "groupId": "commons-httpclient"
      },
      "modificationTime": "2018-11-22T10:10:08.532511Z",
      "moduleName": "commons-httpclient:commons-httpclient",
      "packageManager": "maven",
      "packageName": "commons-httpclient:commons-httpclient",
      "patches": [],
      "publicationTime": "2013-03-25T16:51:47Z",
      "references": [
        {
          "title": "The University of Texas",
          "url": "http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf"
        },
        {
          "title": "X-Force Vulnerability Report",
          "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/79984"
        },
        {
          "title": "Jira Issue",
          "url": "https://issues.apache.org/jira/browse/HTTPCLIENT-1265"
        }
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "severity": "medium",
      "title": "Improper Certificate Validation",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "commons-httpclient:commons-httpclient@3.1-jenkins-1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "commons-httpclient:commons-httpclient",
      "version": "3.1-jenkins-1"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2017-02-22T07:28:21.771000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 4.3,
      "description": "## Overview\n[`commons-httpclient:commons-httpclient`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22httpclient%22) is HttpClient component of the Apache HttpComponents project.\n\nAffected versions of this project are vulnerable to Man-in-the-Middle (MitM) attacks because it does not verify the requesting server's hostname agains existing domain names in the SSL Certificate. The `AbstractVerifier` does not properly verify that the server hostname matches a domain name in the subject's `Common Name (CN)` or `subjectAltName` field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a certificate with a subject that specifies a common name in a field that is not the CN field.  \n\n**NOTE:** this issue exists because of an incomplete fix for [CVE-2012-5783](SNYK-JAVA-COMMONSHTTPCLIENT-30083).\n\n## Remediation\nThere is no fix version for commons-httpclient:commons-httpclient.\n\n## References\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-6153)\n",
      "disclosureTime": "2014-09-07T12:18:36Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-COMMONSHTTPCLIENT-31660",
      "identifiers": {
        "CVE": [
          "CVE-2012-6153"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "commons-httpclient",
        "groupId": "commons-httpclient"
      },
      "modificationTime": "2018-11-22T10:10:09.160297Z",
      "moduleName": "commons-httpclient:commons-httpclient",
      "packageManager": "maven",
      "packageName": "commons-httpclient:commons-httpclient",
      "patches": [],
      "publicationTime": "2018-04-08T12:56:14.007000Z",
      "references": [
        {
          "title": "NVD",
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-6153"
        }
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "severity": "medium",
      "title": "Man-in-the-Middle (MitM)",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "commons-httpclient:commons-httpclient@3.1-jenkins-1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "commons-httpclient:commons-httpclient",
      "version": "3.1-jenkins-1"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
      "alternativeIds": [],
      "creationTime": "2018-08-16T14:26:43.661000Z",
      "credit": [
        "Tobias Ospelt"
      ],
      "cvssScore": 5.5,
      "description": "## Overview\n[org.apache.commons:commons-compress](https://github.com/apache/commons-compress) defines an API for working with compression and archive formats.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) attacks. When reading a specially crafted ZIP archive, the read method might fail to return the correct `EOF` indication after the end of the stream has been reached. If it combined with a `java.io.InputStreamReader`, it can lead to an infinite stream, which can be used to mount a denial of service attack against services that use Compress' zip package.\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\r\n\r\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\r\n\r\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\r\n\r\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\r\n\r\nTwo common types of DoS vulnerabilities:\r\n\r\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\r\n\r\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](npm:ws:20171108)\n\n## Remediation\nUpgrade `org.apache.commons:commons-compress` to version 1.18 or higher.\n\n## References\n- [Apache Mail Archive](https://lists.apache.org/thread.html/b8da751fc0ca949534cdf2744111da6bb0349d2798fac94b0a50f330@%3Cannounce.apache.org%3E)\n",
      "disclosureTime": "2018-08-16T14:26:43.661000Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGAPACHECOMMONS-32473",
      "identifiers": {
        "CVE": [
          "CVE-2018-11771"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "commons-compress",
        "groupId": "org.apache.commons"
      },
      "modificationTime": "2018-11-22T10:10:07.754013Z",
      "moduleName": "org.apache.commons:commons-compress",
      "packageManager": "maven",
      "packageName": "org.apache.commons:commons-compress",
      "patches": [],
      "publicationTime": "2018-08-19T13:36:14.993000Z",
      "references": [
        {
          "title": "Apache Mail Archive",
          "url": "https://lists.apache.org/thread.html/b8da751fc0ca949534cdf2744111da6bb0349d2798fac94b0a50f330@%3Cannounce.apache.org%3E"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.18)"
        ]
      },
      "severity": "medium",
      "title": "Denial of Service (DoS)",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.apache.commons:commons-compress@1.10"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.apache.commons:commons-compress",
      "version": "1.10"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N",
      "alternativeIds": [],
      "creationTime": "2018-09-03T15:23:43.912005Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.5,
      "description": "## Overview\n[org.apache.commons:commons-compress](https://github.com/apache/commons-compress) defines an API for working with compression and archive formats.\r\n\r\nAffected versions of this package are vulnerable to Directory Traversal.\r\n\r\n##  Details\r\n\r\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\r\n\r\nDirectory Traversal vulnerabilities can be generally divided into two types:\r\n\r\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\r\n\r\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\r\n\r\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\r\n\r\n```\r\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\r\n```\r\n**Note** `%2e` is the URL encoded version of `.` (dot).\r\n\r\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \r\n\r\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\r\n\r\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\r\n\r\n```\r\n2018-04-15 22:04:29 .....           19           19  good.txt\r\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\r\n```\r\n\r\n##  Remediation\r\n\r\nUpgrade `org.apache.commons:commons-compress` to version 1.18-RC1 or higher.\r\n\r\n##  References\r\n\r\n-  [GitHub Commit](https://github.com/apache/commons-compress/commit/a080293da69f3fe3d11d5214432e1469ee195870)\n\n## References\n- [GitHub Commit](https://github.com/apache/commons-compress/commit/a080293da69f3fe3d11d5214432e1469ee195870)\n",
      "disclosureTime": "2018-06-15T15:18:44Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGAPACHECOMMONS-72275",
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-22"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "commons-compress",
        "groupId": "org.apache.commons"
      },
      "modificationTime": "2018-11-22T10:10:07.871107Z",
      "moduleName": "org.apache.commons:commons-compress",
      "packageManager": "maven",
      "packageName": "org.apache.commons:commons-compress",
      "patches": [],
      "publicationTime": "2018-09-05T12:48:11Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/commons-compress/commit/a080293da69f3fe3d11d5214432e1469ee195870"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.18-RC1)"
        ]
      },
      "severity": "medium",
      "title": "Directory Traversal",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.apache.commons:commons-compress@1.10"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.apache.commons:commons-compress",
      "version": "1.10"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
      "alternativeIds": [],
      "creationTime": "2018-08-16T14:26:43.661000Z",
      "credit": [
        "Tobias Ospelt"
      ],
      "cvssScore": 5.5,
      "description": "## Overview\n[org.apache.commons:commons-compress](https://github.com/apache/commons-compress) defines an API for working with compression and archive formats.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) attacks. When reading a specially crafted ZIP archive, the read method might fail to return the correct `EOF` indication after the end of the stream has been reached. If it combined with a `java.io.InputStreamReader`, it can lead to an infinite stream, which can be used to mount a denial of service attack against services that use Compress' zip package.\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\r\n\r\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\r\n\r\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\r\n\r\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\r\n\r\nTwo common types of DoS vulnerabilities:\r\n\r\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\r\n\r\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](npm:ws:20171108)\n\n## Remediation\nUpgrade `org.apache.commons:commons-compress` to version 1.18 or higher.\n\n## References\n- [Apache Mail Archive](https://lists.apache.org/thread.html/b8da751fc0ca949534cdf2744111da6bb0349d2798fac94b0a50f330@%3Cannounce.apache.org%3E)\n",
      "disclosureTime": "2018-08-16T14:26:43.661000Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGAPACHECOMMONS-32473",
      "identifiers": {
        "CVE": [
          "CVE-2018-11771"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "commons-compress",
        "groupId": "org.apache.commons"
      },
      "modificationTime": "2018-11-22T10:10:07.754013Z",
      "moduleName": "org.apache.commons:commons-compress",
      "packageManager": "maven",
      "packageName": "org.apache.commons:commons-compress",
      "patches": [],
      "publicationTime": "2018-08-19T13:36:14.993000Z",
      "references": [
        {
          "title": "Apache Mail Archive",
          "url": "https://lists.apache.org/thread.html/b8da751fc0ca949534cdf2744111da6bb0349d2798fac94b0a50f330@%3Cannounce.apache.org%3E"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.18)"
        ]
      },
      "severity": "medium",
      "title": "Denial of Service (DoS)",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.apache.commons:commons-compress@1.10"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.apache.commons:commons-compress",
      "version": "1.10"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N",
      "alternativeIds": [],
      "creationTime": "2018-09-03T15:23:43.912005Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.5,
      "description": "## Overview\n[org.apache.commons:commons-compress](https://github.com/apache/commons-compress) defines an API for working with compression and archive formats.\r\n\r\nAffected versions of this package are vulnerable to Directory Traversal.\r\n\r\n##  Details\r\n\r\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\r\n\r\nDirectory Traversal vulnerabilities can be generally divided into two types:\r\n\r\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\r\n\r\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\r\n\r\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\r\n\r\n```\r\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\r\n```\r\n**Note** `%2e` is the URL encoded version of `.` (dot).\r\n\r\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \r\n\r\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\r\n\r\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\r\n\r\n```\r\n2018-04-15 22:04:29 .....           19           19  good.txt\r\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\r\n```\r\n\r\n##  Remediation\r\n\r\nUpgrade `org.apache.commons:commons-compress` to version 1.18-RC1 or higher.\r\n\r\n##  References\r\n\r\n-  [GitHub Commit](https://github.com/apache/commons-compress/commit/a080293da69f3fe3d11d5214432e1469ee195870)\n\n## References\n- [GitHub Commit](https://github.com/apache/commons-compress/commit/a080293da69f3fe3d11d5214432e1469ee195870)\n",
      "disclosureTime": "2018-06-15T15:18:44Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGAPACHECOMMONS-72275",
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-22"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "commons-compress",
        "groupId": "org.apache.commons"
      },
      "modificationTime": "2018-11-22T10:10:07.871107Z",
      "moduleName": "org.apache.commons:commons-compress",
      "packageManager": "maven",
      "packageName": "org.apache.commons:commons-compress",
      "patches": [],
      "publicationTime": "2018-09-05T12:48:11Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/commons-compress/commit/a080293da69f3fe3d11d5214432e1469ee195870"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.18-RC1)"
        ]
      },
      "severity": "medium",
      "title": "Directory Traversal",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.apache.commons:commons-compress@1.10"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.apache.commons:commons-compress",
      "version": "1.10"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2017-09-20T00:00:00Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.3,
      "description": "## Overview\n[`Codehaus Plexus`](https://codehaus-plexus.github.io/) is a collection of components used by Apache Maven.\n\nAffected versions of this package are vulnerable to Directory Traversal. \n\n## Details\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\r\n\r\nDirectory Traversal vulnerabilities can be generally divided into two types:\r\n\r\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\r\n\r\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\r\n\r\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\r\n\r\n```\r\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\r\n```\r\n**Note** `%2e` is the URL encoded version of `.` (dot).\r\n\r\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \r\n\r\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\r\n\r\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\r\n\r\n```\r\n2018-04-15 22:04:29 .....           19           19  good.txt\r\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\r\n```\n\n\n## Remediation\nUpgrade `Codehaus Plexus` to version `3.0.24` or higher.\n\n## References\n- [Github Issue](https://github.com/codehaus-plexus/plexus-utils/issues/4)\n- [Github Commit](https://github.com/codehaus-plexus/plexus-utils/commit/33a2853df8185b4519b1b8bfae284f03392618ef)",
      "disclosureTime": "2016-05-08T00:00:00Z",
      "fixedIn": [],
      "functions": [
        {
          "functionId": {
            "className": "Expand",
            "filePath": "org/codehaus/plexus/util/Expand.java",
            "functionName": "extractFile"
          },
          "version": [
            "[,3.0.24)"
          ]
        },
        {
          "functionId": {
            "className": "Expand",
            "filePath": "org/codehaus/plexus/util/Expand.java",
            "functionName": "extractFile"
          },
          "version": [
            "[,3.0.24)"
          ]
        }
      ],
      "id": "SNYK-JAVA-ORGCODEHAUSPLEXUS-31521",
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-22"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "plexus-utils",
        "groupId": "org.codehaus.plexus"
      },
      "modificationTime": "2018-11-22T10:10:07.254497Z",
      "moduleName": "org.codehaus.plexus:plexus-utils",
      "packageManager": "maven",
      "packageName": "org.codehaus.plexus:plexus-utils",
      "patches": [],
      "publicationTime": "2017-09-20T00:00:00Z",
      "references": [
        {
          "title": "Github Issue",
          "url": "https://github.com/codehaus-plexus/plexus-utils/issues/4"
        },
        {
          "title": "Github Commit",
          "url": "https://github.com/codehaus-plexus/plexus-utils/commit/33a2853df8185b4519b1b8bfae284f03392618ef"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,3.0.24)"
        ]
      },
      "severity": "medium",
      "title": "Directory Traversal",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.apache.maven:maven-core@3.1.0",
        "org.codehaus.plexus:plexus-utils@3.0.10"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.codehaus.plexus:plexus-utils",
      "version": "3.0.10"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2016-09-20T00:00:00Z",
      "credit": [
        "Charles Duffy"
      ],
      "cvssScore": 9.8,
      "description": "## Overview\r\n[`Codehaus Plexus`](https://codehaus-plexus.github.io/) is a collection of components used by Apache Maven.\r\n\r\nAffected versions of this package are vulnerable to Shell Command Injection. The Commandline class in plexus-utils does not correctly quote the contents of double-quoted strings.\r\n\r\n## Remediation\r\nUpgrade _Codehaus Plexus_ to version `3.0.16` or higher.\r\n\r\n## References\r\n- [Github Commit](https://github.com/codehaus-plexus/plexus-utils/commit/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41)\r\n- [PLXUTILS-161 - Raw Jira Ticket JSON](https://raw.githubusercontent.com/sonatype/plexus-utils/master/jira/PLXUTILS-161.json)",
      "disclosureTime": "2016-05-08T00:00:00Z",
      "fixedIn": [
        "3.0.16"
      ],
      "functions": [
        {
          "functionId": {
            "className": "Commandline",
            "filePath": "org/codehaus/plexus/util/cli/Commandline.java",
            "functionName": "execute"
          },
          "version": [
            "[,3.0.16)"
          ]
        }
      ],
      "id": "SNYK-JAVA-ORGCODEHAUSPLEXUS-31522",
      "identifiers": {
        "CVE": [
          "CVE-2017-1000487"
        ],
        "CWE": [
          "CWE-77"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "plexus-utils",
        "groupId": "org.codehaus.plexus"
      },
      "modificationTime": "2019-01-24T09:33:12.715901Z",
      "moduleName": "org.codehaus.plexus:plexus-utils",
      "packageManager": "maven",
      "packageName": "org.codehaus.plexus:plexus-utils",
      "patches": [],
      "publicationTime": "2016-09-20T00:00:00Z",
      "references": [
        {
          "title": "Github Commit",
          "url": "https://github.com/codehaus-plexus/plexus-utils/commit/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41"
        },
        {
          "title": "PLXUTILS-161 - Raw Jira Ticket JSON",
          "url": "https://raw.githubusercontent.com/sonatype/plexus-utils/master/jira/PLXUTILS-161.json"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,3.0.16)"
        ]
      },
      "severity": "high",
      "title": "Shell Command Injection",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.apache.maven:maven-core@3.1.0",
        "org.codehaus.plexus:plexus-utils@3.0.10"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.codehaus.plexus:plexus-utils",
      "version": "3.0.10"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2017-09-20T00:00:00Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.3,
      "description": "## Overview\n[`Codehaus Plexus`](https://codehaus-plexus.github.io/) is a collection of components used by Apache Maven.\n\nAffected versions of this package are vulnerable to Directory Traversal. \n\n## Details\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\r\n\r\nDirectory Traversal vulnerabilities can be generally divided into two types:\r\n\r\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\r\n\r\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\r\n\r\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\r\n\r\n```\r\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\r\n```\r\n**Note** `%2e` is the URL encoded version of `.` (dot).\r\n\r\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \r\n\r\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\r\n\r\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\r\n\r\n```\r\n2018-04-15 22:04:29 .....           19           19  good.txt\r\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\r\n```\n\n\n## Remediation\nUpgrade `Codehaus Plexus` to version `3.0.24` or higher.\n\n## References\n- [Github Issue](https://github.com/codehaus-plexus/plexus-utils/issues/4)\n- [Github Commit](https://github.com/codehaus-plexus/plexus-utils/commit/33a2853df8185b4519b1b8bfae284f03392618ef)",
      "disclosureTime": "2016-05-08T00:00:00Z",
      "fixedIn": [],
      "functions": [
        {
          "functionId": {
            "className": "Expand",
            "filePath": "org/codehaus/plexus/util/Expand.java",
            "functionName": "extractFile"
          },
          "version": [
            "[,3.0.24)"
          ]
        },
        {
          "functionId": {
            "className": "Expand",
            "filePath": "org/codehaus/plexus/util/Expand.java",
            "functionName": "extractFile"
          },
          "version": [
            "[,3.0.24)"
          ]
        }
      ],
      "id": "SNYK-JAVA-ORGCODEHAUSPLEXUS-31521",
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-22"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "plexus-utils",
        "groupId": "org.codehaus.plexus"
      },
      "modificationTime": "2018-11-22T10:10:07.254497Z",
      "moduleName": "org.codehaus.plexus:plexus-utils",
      "packageManager": "maven",
      "packageName": "org.codehaus.plexus:plexus-utils",
      "patches": [],
      "publicationTime": "2017-09-20T00:00:00Z",
      "references": [
        {
          "title": "Github Issue",
          "url": "https://github.com/codehaus-plexus/plexus-utils/issues/4"
        },
        {
          "title": "Github Commit",
          "url": "https://github.com/codehaus-plexus/plexus-utils/commit/33a2853df8185b4519b1b8bfae284f03392618ef"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,3.0.24)"
        ]
      },
      "severity": "medium",
      "title": "Directory Traversal",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.apache.maven:maven-core@3.1.0",
        "org.codehaus.plexus:plexus-utils@3.0.10"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.codehaus.plexus:plexus-utils",
      "version": "3.0.10"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2016-09-20T00:00:00Z",
      "credit": [
        "Charles Duffy"
      ],
      "cvssScore": 9.8,
      "description": "## Overview\r\n[`Codehaus Plexus`](https://codehaus-plexus.github.io/) is a collection of components used by Apache Maven.\r\n\r\nAffected versions of this package are vulnerable to Shell Command Injection. The Commandline class in plexus-utils does not correctly quote the contents of double-quoted strings.\r\n\r\n## Remediation\r\nUpgrade _Codehaus Plexus_ to version `3.0.16` or higher.\r\n\r\n## References\r\n- [Github Commit](https://github.com/codehaus-plexus/plexus-utils/commit/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41)\r\n- [PLXUTILS-161 - Raw Jira Ticket JSON](https://raw.githubusercontent.com/sonatype/plexus-utils/master/jira/PLXUTILS-161.json)",
      "disclosureTime": "2016-05-08T00:00:00Z",
      "fixedIn": [
        "3.0.16"
      ],
      "functions": [
        {
          "functionId": {
            "className": "Commandline",
            "filePath": "org/codehaus/plexus/util/cli/Commandline.java",
            "functionName": "execute"
          },
          "version": [
            "[,3.0.16)"
          ]
        }
      ],
      "id": "SNYK-JAVA-ORGCODEHAUSPLEXUS-31522",
      "identifiers": {
        "CVE": [
          "CVE-2017-1000487"
        ],
        "CWE": [
          "CWE-77"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "plexus-utils",
        "groupId": "org.codehaus.plexus"
      },
      "modificationTime": "2019-01-24T09:33:12.715901Z",
      "moduleName": "org.codehaus.plexus:plexus-utils",
      "packageManager": "maven",
      "packageName": "org.codehaus.plexus:plexus-utils",
      "patches": [],
      "publicationTime": "2016-09-20T00:00:00Z",
      "references": [
        {
          "title": "Github Commit",
          "url": "https://github.com/codehaus-plexus/plexus-utils/commit/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41"
        },
        {
          "title": "PLXUTILS-161 - Raw Jira Ticket JSON",
          "url": "https://raw.githubusercontent.com/sonatype/plexus-utils/master/jira/PLXUTILS-161.json"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,3.0.16)"
        ]
      },
      "severity": "high",
      "title": "Shell Command Injection",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.apache.maven:maven-core@3.1.0",
        "org.codehaus.plexus:plexus-utils@3.0.10"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.codehaus.plexus:plexus-utils",
      "version": "3.0.10"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2019-04-14T09:08:24.937516Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.4,
      "description": "## Overview\r\n\r\n[org.jenkins-ci.main:jenkins-core](https://github.com/jenkinsci/jenkins) is an open source automation server.\r\n\r\n\r\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS).\r\nThe `f:validateButton` form control for the Jenkins UI does not properly escape job URLs. The vulnerability is exploitable by users with the ability to control job names.\r\n\r\n## Details\r\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\r\n\r\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\r\n\r\nֿInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\r\n\r\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\r\n \r\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \r\n\r\n### Types of attacks\r\nThere are a few methods by which XSS can be manipulated:\r\n\r\n|Type|Origin|Description|\r\n|--|--|--|\r\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\r\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \r\n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\r\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\r\n\r\n### Affected environments\r\nThe following environments are susceptible to an XSS attack:\r\n\r\n* Web servers\r\n* Application servers\r\n* Web application environments\r\n\r\n### How to prevent\r\nThis section describes the top best practices designed to specifically protect your code: \r\n\r\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \r\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \r\n* Give users the option to disable client-side scripts.\r\n* Redirect invalid requests.\r\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\r\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\r\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\r\n\r\n## Remediation\r\n\r\nUpgrade `org.jenkins-ci.main:jenkins-core` to version 2.164.2, 2.172 or higher.\r\n\r\n\r\n## References\r\n\r\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2019-04-10/#SECURITY-1327)\r\n",
      "disclosureTime": "2019-04-10T21:04:16Z",
      "fixedIn": [
        "2.164.2",
        "2.172"
      ],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIMAIN-174177",
      "identifiers": {
        "CVE": [
          "CVE-2019-1003050"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "jenkins-core",
        "groupId": "org.jenkins-ci.main"
      },
      "modificationTime": "2019-04-14T12:01:43.723375Z",
      "moduleName": "org.jenkins-ci.main:jenkins-core",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.main:jenkins-core",
      "patches": [],
      "publicationTime": "2019-04-14T12:01:06Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2019-04-10/#SECURITY-1327"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.164.2)",
          "[,2.172)"
        ]
      },
      "severity": "medium",
      "title": "Cross-site Scripting (XSS)",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.main:jenkins-core",
      "version": "2.170-SNAPSHOT"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-04-14T09:22:40.770227Z",
      "credit": [
        "CWE-287"
      ],
      "cvssScore": 6.6,
      "description": "## Overview\r\n\r\n[org.jenkins-ci.main:jenkins-core](https://github.com/jenkinsci/jenkins) is an open source automation server.\r\n\r\n\r\nAffected versions of this package are vulnerable to Authentication Bypass.\r\nUsers who cached their CLI authentication before Jenkins was updated to 2.150.2 and newer, or 2.160 and newer, would remain authenticated in Jenkins 2.171 and earlier and Jenkins LTS 2.164.1 and earlier, because the fix for CVE-2019-1003004 in these releases did not reject existing remoting-based CLI authentication caches.\r\n\r\n## Remediation\r\n\r\nUpgrade `org.jenkins-ci.main:jenkins-core` to version 2.164.2, 2.172 or higher.\r\n\r\n\r\n## References\r\n\r\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2019-04-10/#SECURITY-1289)\r\n",
      "disclosureTime": "2019-04-10T21:04:16Z",
      "fixedIn": [
        "2.164.2",
        "2.172"
      ],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIMAIN-174178",
      "identifiers": {
        "CVE": [
          "CVE-2019-1003049"
        ],
        "CWE": [
          "CWE-287"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "jenkins-core",
        "groupId": "org.jenkins-ci.main"
      },
      "modificationTime": "2019-04-14T12:01:43.731295Z",
      "moduleName": "org.jenkins-ci.main:jenkins-core",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.main:jenkins-core",
      "patches": [],
      "publicationTime": "2019-04-14T21:04:16Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2019-04-10/#SECURITY-1289"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.164.2)",
          "[,2.172)"
        ]
      },
      "severity": "medium",
      "title": "Authentication Bypass",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.main:jenkins-core",
      "version": "2.170-SNAPSHOT"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2019-04-14T09:08:24.937516Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.4,
      "description": "## Overview\r\n\r\n[org.jenkins-ci.main:jenkins-core](https://github.com/jenkinsci/jenkins) is an open source automation server.\r\n\r\n\r\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS).\r\nThe `f:validateButton` form control for the Jenkins UI does not properly escape job URLs. The vulnerability is exploitable by users with the ability to control job names.\r\n\r\n## Details\r\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\r\n\r\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\r\n\r\nֿInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\r\n\r\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\r\n \r\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \r\n\r\n### Types of attacks\r\nThere are a few methods by which XSS can be manipulated:\r\n\r\n|Type|Origin|Description|\r\n|--|--|--|\r\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\r\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \r\n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\r\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\r\n\r\n### Affected environments\r\nThe following environments are susceptible to an XSS attack:\r\n\r\n* Web servers\r\n* Application servers\r\n* Web application environments\r\n\r\n### How to prevent\r\nThis section describes the top best practices designed to specifically protect your code: \r\n\r\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \r\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \r\n* Give users the option to disable client-side scripts.\r\n* Redirect invalid requests.\r\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\r\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\r\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\r\n\r\n## Remediation\r\n\r\nUpgrade `org.jenkins-ci.main:jenkins-core` to version 2.164.2, 2.172 or higher.\r\n\r\n\r\n## References\r\n\r\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2019-04-10/#SECURITY-1327)\r\n",
      "disclosureTime": "2019-04-10T21:04:16Z",
      "fixedIn": [
        "2.164.2",
        "2.172"
      ],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIMAIN-174177",
      "identifiers": {
        "CVE": [
          "CVE-2019-1003050"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "jenkins-core",
        "groupId": "org.jenkins-ci.main"
      },
      "modificationTime": "2019-04-14T12:01:43.723375Z",
      "moduleName": "org.jenkins-ci.main:jenkins-core",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.main:jenkins-core",
      "patches": [],
      "publicationTime": "2019-04-14T12:01:06Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2019-04-10/#SECURITY-1327"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.164.2)",
          "[,2.172)"
        ]
      },
      "severity": "medium",
      "title": "Cross-site Scripting (XSS)",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.main:jenkins-core",
      "version": "2.170-SNAPSHOT"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-04-14T09:22:40.770227Z",
      "credit": [
        "CWE-287"
      ],
      "cvssScore": 6.6,
      "description": "## Overview\r\n\r\n[org.jenkins-ci.main:jenkins-core](https://github.com/jenkinsci/jenkins) is an open source automation server.\r\n\r\n\r\nAffected versions of this package are vulnerable to Authentication Bypass.\r\nUsers who cached their CLI authentication before Jenkins was updated to 2.150.2 and newer, or 2.160 and newer, would remain authenticated in Jenkins 2.171 and earlier and Jenkins LTS 2.164.1 and earlier, because the fix for CVE-2019-1003004 in these releases did not reject existing remoting-based CLI authentication caches.\r\n\r\n## Remediation\r\n\r\nUpgrade `org.jenkins-ci.main:jenkins-core` to version 2.164.2, 2.172 or higher.\r\n\r\n\r\n## References\r\n\r\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2019-04-10/#SECURITY-1289)\r\n",
      "disclosureTime": "2019-04-10T21:04:16Z",
      "fixedIn": [
        "2.164.2",
        "2.172"
      ],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIMAIN-174178",
      "identifiers": {
        "CVE": [
          "CVE-2019-1003049"
        ],
        "CWE": [
          "CWE-287"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "jenkins-core",
        "groupId": "org.jenkins-ci.main"
      },
      "modificationTime": "2019-04-14T12:01:43.731295Z",
      "moduleName": "org.jenkins-ci.main:jenkins-core",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.main:jenkins-core",
      "patches": [],
      "publicationTime": "2019-04-14T21:04:16Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2019-04-10/#SECURITY-1289"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.164.2)",
          "[,2.172)"
        ]
      },
      "severity": "medium",
      "title": "Authentication Bypass",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.main:jenkins-core",
      "version": "2.170-SNAPSHOT"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
      "alternativeIds": [],
      "creationTime": "2018-02-05T17:51:09.052000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.9,
      "description": "## Overview\n[org.jenkins-ci.main:maven-plugin](https://github.com/jenkinsci/maven-plugin) provides an advanced integration for Maven 2/3 projects.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM) attacks. It bundled a [vulnerable version of the commons-httpclient](https://snyk.io/vuln/SNYK-JAVA-COMMONSHTTPCLIENT-31660) which incorrectly verified SSL certificates.\n\n## Remediation\nUpgrade `org.jenkins-ci.main:maven-plugin` to version 3.0 or higher.\n\n## References\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2017-10-11/)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2017-1000397)\n",
      "disclosureTime": "2017-10-06T17:51:09.052000Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIMAIN-32186",
      "identifiers": {
        "CVE": [
          "CVE-2017-1000397"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "maven-plugin",
        "groupId": "org.jenkins-ci.main"
      },
      "modificationTime": "2018-11-18T11:50:46.279130Z",
      "moduleName": "org.jenkins-ci.main:maven-plugin",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.main:maven-plugin",
      "patches": [],
      "publicationTime": "2018-04-09T15:16:11.870000Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2017-10-11/"
        },
        {
          "title": "NVD",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-1000397"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,3.0)"
        ]
      },
      "severity": "medium",
      "title": "Man-in-the-Middle (MitM)",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.main:maven-plugin",
      "version": "2.14"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N",
      "alternativeIds": [],
      "creationTime": "2018-02-05T17:51:09.052000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.9,
      "description": "## Overview\n[org.jenkins-ci.main:maven-plugin](https://github.com/jenkinsci/maven-plugin) provides an advanced integration for Maven 2/3 projects.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM) attacks. It bundled a [vulnerable version of the commons-httpclient](https://snyk.io/vuln/SNYK-JAVA-COMMONSHTTPCLIENT-31660) which incorrectly verified SSL certificates.\n\n## Remediation\nUpgrade `org.jenkins-ci.main:maven-plugin` to version 3.0 or higher.\n\n## References\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2017-10-11/)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2017-1000397)\n",
      "disclosureTime": "2017-10-06T17:51:09.052000Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIMAIN-32186",
      "identifiers": {
        "CVE": [
          "CVE-2017-1000397"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "maven-plugin",
        "groupId": "org.jenkins-ci.main"
      },
      "modificationTime": "2018-11-18T11:50:46.279130Z",
      "moduleName": "org.jenkins-ci.main:maven-plugin",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.main:maven-plugin",
      "patches": [],
      "publicationTime": "2018-04-09T15:16:11.870000Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2017-10-11/"
        },
        {
          "title": "NVD",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-1000397"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,3.0)"
        ]
      },
      "severity": "medium",
      "title": "Man-in-the-Middle (MitM)",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.main:maven-plugin",
      "version": "2.14"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-02-10T14:36:58.088798Z",
      "credit": [
        "Mikhail Egorov"
      ],
      "cvssScore": 8.8,
      "description": "## Overview\r\n\r\n[org.jenkins-ci.plugins:script-security](https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin) is a allows Jenkins administrators to control what in-process scripts can be run by less-privileged users.\r\n\r\n\r\nAffected versions of this package are vulnerable to Arbitrary Code Execution.\r\nAn attacker with `Overall/Read` permission could provide a Groovy script to an HTTP endpoint that can result in arbitrary code execution on the Jenkins master JVM.\r\n\r\n## Remediation\r\n\r\nUpgrade `org.jenkins-ci.plugins:script-security` to version 1.51 or higher.\r\n\r\n\r\n## References\r\n\r\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2019-01-28/#SECURITY-1292)\r\n\r\n- [GitHub Commit](https://github.com/jenkinsci/script-security-plugin/commit/35119273101af26792457ec177f34f6f4fa49d99)\r\n",
      "disclosureTime": "2019-01-28T16:15:32Z",
      "fixedIn": [
        "1.51"
      ],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIPLUGINS-173668",
      "identifiers": {
        "CVE": [
          "CVE-2019-1003005"
        ],
        "CWE": [
          "CWE-94"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "script-security",
        "groupId": "org.jenkins-ci.plugins"
      },
      "modificationTime": "2019-02-10T15:43:39.426845Z",
      "moduleName": "org.jenkins-ci.plugins:script-security",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.plugins:script-security",
      "patches": [],
      "publicationTime": "2019-02-06T16:15:32Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2019-01-28/#SECURITY-1292"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/jenkinsci/script-security-plugin/commit/35119273101af26792457ec177f34f6f4fa49d99"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.51)"
        ]
      },
      "severity": "high",
      "title": "Arbitrary Code Execution",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.plugins:matrix-project@1.4.1",
        "org.jenkins-ci.plugins:script-security@1.13"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.plugins:script-security",
      "version": "1.13"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-03-31T08:30:01.853219Z",
      "credit": [
        "Anthony Weems"
      ],
      "cvssScore": 8.8,
      "description": "## Overview\r\n\r\n[org.jenkins-ci.plugins:script-security](https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin) allows Jenkins administrators to control what in-process scripts can be run by less-privileged users.\r\n\r\n\r\nAffected versions of this package are vulnerable to Sandbox Bypass.\r\nIt allows attackers to invoke arbitrary constructors in sandboxed scripts.\r\n\r\n## Remediation\r\n\r\nUpgrade `org.jenkins-ci.plugins:script-security` to version 1.56 or higher.\r\n\r\n\r\n## References\r\n\r\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2019-03-25/#SECURITY-1353)\r\n\r\n- [GitHub Commit](https://github.com/jenkinsci/script-security-plugin/commit/8424ad90547e37a2bd3b6a3a7da48eb1af9cd0ee)\r\n",
      "disclosureTime": "2019-03-28T18:52:00Z",
      "fixedIn": [
        "1.56"
      ],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIPLUGINS-174033",
      "identifiers": {
        "CVE": [
          "CVE-2019-1003040",
          "CVE-2019-1003041"
        ],
        "CWE": [
          "CWE-265"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "script-security",
        "groupId": "org.jenkins-ci.plugins"
      },
      "modificationTime": "2019-03-31T11:11:57.182407Z",
      "moduleName": "org.jenkins-ci.plugins:script-security",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.plugins:script-security",
      "patches": [],
      "publicationTime": "2019-03-28T18:52:00Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2019-03-25/#SECURITY-1353"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/jenkinsci/script-security-plugin/commit/8424ad90547e37a2bd3b6a3a7da48eb1af9cd0ee"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.56)"
        ]
      },
      "severity": "high",
      "title": "Sandbox Bypass",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.plugins:matrix-project@1.4.1",
        "org.jenkins-ci.plugins:script-security@1.13"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.plugins:script-security",
      "version": "1.13"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2018-02-05T17:51:09.056000Z",
      "credit": [
        "Gregory Draperi"
      ],
      "cvssScore": 6.5,
      "description": "## Overview\n[org.jenkins-ci.plugins:script-security](https://github.com/jenkinsci/script-security-plugin) allows Jenkins administrators to control what in-process scripts can be run by less-privileged users.\n\nAffected versions of this package are vulnerable to Arbitrary File Read. Users with the ability to configure sandboxed Groovy scripts are able to use a type coercion feature in Groovy to create new `File` objects from strings. This allowed reading arbitrary files on the Jenkins master file system. Such a type coercion is now subject to sandbox protection and considered to be a call to the `new File(String)` constructor for the purpose of in-process script approval.\n\n## Remediation\nUpgrade `org.jenkins-ci.plugins:script-security` to version 1.37 or higher.\n\n## References\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2017-12-11/)\n- [GitHub Commit](https://github.com/jenkinsci/script-security-plugin/commit/4caaa50e570dafa15c73badac250eb31878ab3ba)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2017-1000505)\n",
      "disclosureTime": "2017-12-01T17:51:09.056000Z",
      "fixedIn": [
        "1.37"
      ],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIPLUGINS-32171",
      "identifiers": {
        "CVE": [
          "CVE-2017-1000505"
        ],
        "CWE": [
          "CWE-200"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "script-security",
        "groupId": "org.jenkins-ci.plugins"
      },
      "modificationTime": "2019-02-10T14:54:13.134807Z",
      "moduleName": "org.jenkins-ci.plugins:script-security",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.plugins:script-security",
      "patches": [],
      "publicationTime": "2018-04-08T12:56:15.009000Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2017-12-11/"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/jenkinsci/script-security-plugin/commit/4caaa50e570dafa15c73badac250eb31878ab3ba"
        },
        {
          "title": "NVD",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-1000505"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.37)"
        ]
      },
      "severity": "medium",
      "title": "Arbitrary File Read",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.plugins:matrix-project@1.4.1",
        "org.jenkins-ci.plugins:script-security@1.13"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.plugins:script-security",
      "version": "1.13"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2018-05-03T08:55:25.924000Z",
      "credit": [
        "Daniel Beck"
      ],
      "cvssScore": 7.3,
      "description": "## Overview\n[org.jenkins-ci.plugins:script-security](https://github.com/jenkinsci/script-security-plugin) Allows Jenkins administrators to control what in-process scripts can be run by less-privileged users.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. It might allow remote attackers to bypass a Groovy sandbox protection mechanism via a plugin that performs (1) direct field access or (2) get/set array operations.\n\n## Remediation\nUpgrade `org.jenkins-ci.plugins:script-security` to version 1.18.1 or higher.\n\n## References\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2016-04-11/)\n- [GitHub Commit](https://github.com/jenkinsci/script-security-plugin/commit/e7d3bc9c1e25caa23cea33381134a4baaedc75b8)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2016-3102)\n",
      "disclosureTime": "2016-03-28T08:55:25.924000Z",
      "fixedIn": [
        "1.18.1"
      ],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIPLUGINS-32254",
      "identifiers": {
        "CVE": [
          "CVE-2016-3102"
        ],
        "CWE": [
          "CWE-254"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "script-security",
        "groupId": "org.jenkins-ci.plugins"
      },
      "modificationTime": "2019-02-10T14:54:13.145305Z",
      "moduleName": "org.jenkins-ci.plugins:script-security",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.plugins:script-security",
      "patches": [],
      "publicationTime": "2018-05-08T15:34:07.356000Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2016-04-11/"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/jenkinsci/script-security-plugin/commit/e7d3bc9c1e25caa23cea33381134a4baaedc75b8"
        },
        {
          "title": "NVD",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-3102"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.18.1)"
        ]
      },
      "severity": "high",
      "title": "Arbitrary Code Execution",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.plugins:matrix-project@1.4.1",
        "org.jenkins-ci.plugins:script-security@1.13"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.plugins:script-security",
      "version": "1.13"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-01-24T14:41:28.008146Z",
      "credit": [
        "Orange Tsai"
      ],
      "cvssScore": 8.8,
      "description": "## Overview\r\n\r\n[org.jenkins-ci.plugins:script-security](https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin) is a allows Jenkins administrators to control what in-process scripts can be run by less-privileged users.\r\n\r\n\r\nAffected versions of this package are vulnerable to Sandbox Bypass.\r\nA malicious user with `Overall/Read` permission, or able to control Jenkins file or sandboxed Pipeline shared library contents in SCM, could bypass the sandbox protection and execute arbitrary code on the Jenkins master.\r\n\r\n## Remediation\r\n\r\nUpgrade `org.jenkins-ci.plugins:script-security` to version 1.50 or higher.\r\n\r\n\r\n## References\r\n\r\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2019-01-08/#SECURITY-1266)\r\n\r\n- [GitHub Commit](https://github.com/jenkinsci/script-security-plugin/commit/2c5122e50742dd16492f9424992deb21cc07837c)\r\n",
      "disclosureTime": "2019-01-22T13:42:22Z",
      "fixedIn": [
        "1.50"
      ],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIPLUGINS-73604",
      "identifiers": {
        "CVE": [
          "CVE-2019-1003000"
        ],
        "CWE": [
          "CWE-265"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "script-security",
        "groupId": "org.jenkins-ci.plugins"
      },
      "modificationTime": "2019-01-24T16:14:28.218424Z",
      "moduleName": "org.jenkins-ci.plugins:script-security",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.plugins:script-security",
      "patches": [],
      "publicationTime": "2019-01-22T13:42:22Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2019-01-08/#SECURITY-1266"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/jenkinsci/script-security-plugin/commit/2c5122e50742dd16492f9424992deb21cc07837c"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.50)"
        ]
      },
      "severity": "high",
      "title": "Sandbox Bypass",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.plugins:matrix-project@1.4.1",
        "org.jenkins-ci.plugins:script-security@1.13"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.plugins:script-security",
      "version": "1.13"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-02-10T14:36:58.088798Z",
      "credit": [
        "Mikhail Egorov"
      ],
      "cvssScore": 8.8,
      "description": "## Overview\r\n\r\n[org.jenkins-ci.plugins:script-security](https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin) is a allows Jenkins administrators to control what in-process scripts can be run by less-privileged users.\r\n\r\n\r\nAffected versions of this package are vulnerable to Arbitrary Code Execution.\r\nAn attacker with `Overall/Read` permission could provide a Groovy script to an HTTP endpoint that can result in arbitrary code execution on the Jenkins master JVM.\r\n\r\n## Remediation\r\n\r\nUpgrade `org.jenkins-ci.plugins:script-security` to version 1.51 or higher.\r\n\r\n\r\n## References\r\n\r\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2019-01-28/#SECURITY-1292)\r\n\r\n- [GitHub Commit](https://github.com/jenkinsci/script-security-plugin/commit/35119273101af26792457ec177f34f6f4fa49d99)\r\n",
      "disclosureTime": "2019-01-28T16:15:32Z",
      "fixedIn": [
        "1.51"
      ],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIPLUGINS-173668",
      "identifiers": {
        "CVE": [
          "CVE-2019-1003005"
        ],
        "CWE": [
          "CWE-94"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "script-security",
        "groupId": "org.jenkins-ci.plugins"
      },
      "modificationTime": "2019-02-10T15:43:39.426845Z",
      "moduleName": "org.jenkins-ci.plugins:script-security",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.plugins:script-security",
      "patches": [],
      "publicationTime": "2019-02-06T16:15:32Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2019-01-28/#SECURITY-1292"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/jenkinsci/script-security-plugin/commit/35119273101af26792457ec177f34f6f4fa49d99"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.51)"
        ]
      },
      "severity": "high",
      "title": "Arbitrary Code Execution",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.plugins:matrix-project@1.4.1",
        "org.jenkins-ci.plugins:script-security@1.13"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.plugins:script-security",
      "version": "1.13"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-03-31T08:30:01.853219Z",
      "credit": [
        "Anthony Weems"
      ],
      "cvssScore": 8.8,
      "description": "## Overview\r\n\r\n[org.jenkins-ci.plugins:script-security](https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin) allows Jenkins administrators to control what in-process scripts can be run by less-privileged users.\r\n\r\n\r\nAffected versions of this package are vulnerable to Sandbox Bypass.\r\nIt allows attackers to invoke arbitrary constructors in sandboxed scripts.\r\n\r\n## Remediation\r\n\r\nUpgrade `org.jenkins-ci.plugins:script-security` to version 1.56 or higher.\r\n\r\n\r\n## References\r\n\r\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2019-03-25/#SECURITY-1353)\r\n\r\n- [GitHub Commit](https://github.com/jenkinsci/script-security-plugin/commit/8424ad90547e37a2bd3b6a3a7da48eb1af9cd0ee)\r\n",
      "disclosureTime": "2019-03-28T18:52:00Z",
      "fixedIn": [
        "1.56"
      ],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIPLUGINS-174033",
      "identifiers": {
        "CVE": [
          "CVE-2019-1003040",
          "CVE-2019-1003041"
        ],
        "CWE": [
          "CWE-265"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "script-security",
        "groupId": "org.jenkins-ci.plugins"
      },
      "modificationTime": "2019-03-31T11:11:57.182407Z",
      "moduleName": "org.jenkins-ci.plugins:script-security",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.plugins:script-security",
      "patches": [],
      "publicationTime": "2019-03-28T18:52:00Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2019-03-25/#SECURITY-1353"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/jenkinsci/script-security-plugin/commit/8424ad90547e37a2bd3b6a3a7da48eb1af9cd0ee"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.56)"
        ]
      },
      "severity": "high",
      "title": "Sandbox Bypass",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.plugins:matrix-project@1.4.1",
        "org.jenkins-ci.plugins:script-security@1.13"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.plugins:script-security",
      "version": "1.13"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2018-02-05T17:51:09.056000Z",
      "credit": [
        "Gregory Draperi"
      ],
      "cvssScore": 6.5,
      "description": "## Overview\n[org.jenkins-ci.plugins:script-security](https://github.com/jenkinsci/script-security-plugin) allows Jenkins administrators to control what in-process scripts can be run by less-privileged users.\n\nAffected versions of this package are vulnerable to Arbitrary File Read. Users with the ability to configure sandboxed Groovy scripts are able to use a type coercion feature in Groovy to create new `File` objects from strings. This allowed reading arbitrary files on the Jenkins master file system. Such a type coercion is now subject to sandbox protection and considered to be a call to the `new File(String)` constructor for the purpose of in-process script approval.\n\n## Remediation\nUpgrade `org.jenkins-ci.plugins:script-security` to version 1.37 or higher.\n\n## References\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2017-12-11/)\n- [GitHub Commit](https://github.com/jenkinsci/script-security-plugin/commit/4caaa50e570dafa15c73badac250eb31878ab3ba)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2017-1000505)\n",
      "disclosureTime": "2017-12-01T17:51:09.056000Z",
      "fixedIn": [
        "1.37"
      ],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIPLUGINS-32171",
      "identifiers": {
        "CVE": [
          "CVE-2017-1000505"
        ],
        "CWE": [
          "CWE-200"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "script-security",
        "groupId": "org.jenkins-ci.plugins"
      },
      "modificationTime": "2019-02-10T14:54:13.134807Z",
      "moduleName": "org.jenkins-ci.plugins:script-security",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.plugins:script-security",
      "patches": [],
      "publicationTime": "2018-04-08T12:56:15.009000Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2017-12-11/"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/jenkinsci/script-security-plugin/commit/4caaa50e570dafa15c73badac250eb31878ab3ba"
        },
        {
          "title": "NVD",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-1000505"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.37)"
        ]
      },
      "severity": "medium",
      "title": "Arbitrary File Read",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.plugins:matrix-project@1.4.1",
        "org.jenkins-ci.plugins:script-security@1.13"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.plugins:script-security",
      "version": "1.13"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2018-05-03T08:55:25.924000Z",
      "credit": [
        "Daniel Beck"
      ],
      "cvssScore": 7.3,
      "description": "## Overview\n[org.jenkins-ci.plugins:script-security](https://github.com/jenkinsci/script-security-plugin) Allows Jenkins administrators to control what in-process scripts can be run by less-privileged users.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. It might allow remote attackers to bypass a Groovy sandbox protection mechanism via a plugin that performs (1) direct field access or (2) get/set array operations.\n\n## Remediation\nUpgrade `org.jenkins-ci.plugins:script-security` to version 1.18.1 or higher.\n\n## References\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2016-04-11/)\n- [GitHub Commit](https://github.com/jenkinsci/script-security-plugin/commit/e7d3bc9c1e25caa23cea33381134a4baaedc75b8)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2016-3102)\n",
      "disclosureTime": "2016-03-28T08:55:25.924000Z",
      "fixedIn": [
        "1.18.1"
      ],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIPLUGINS-32254",
      "identifiers": {
        "CVE": [
          "CVE-2016-3102"
        ],
        "CWE": [
          "CWE-254"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "script-security",
        "groupId": "org.jenkins-ci.plugins"
      },
      "modificationTime": "2019-02-10T14:54:13.145305Z",
      "moduleName": "org.jenkins-ci.plugins:script-security",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.plugins:script-security",
      "patches": [],
      "publicationTime": "2018-05-08T15:34:07.356000Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2016-04-11/"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/jenkinsci/script-security-plugin/commit/e7d3bc9c1e25caa23cea33381134a4baaedc75b8"
        },
        {
          "title": "NVD",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-3102"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.18.1)"
        ]
      },
      "severity": "high",
      "title": "Arbitrary Code Execution",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.plugins:matrix-project@1.4.1",
        "org.jenkins-ci.plugins:script-security@1.13"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.plugins:script-security",
      "version": "1.13"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-01-24T14:41:28.008146Z",
      "credit": [
        "Orange Tsai"
      ],
      "cvssScore": 8.8,
      "description": "## Overview\r\n\r\n[org.jenkins-ci.plugins:script-security](https://wiki.jenkins.io/display/JENKINS/Script+Security+Plugin) is a allows Jenkins administrators to control what in-process scripts can be run by less-privileged users.\r\n\r\n\r\nAffected versions of this package are vulnerable to Sandbox Bypass.\r\nA malicious user with `Overall/Read` permission, or able to control Jenkins file or sandboxed Pipeline shared library contents in SCM, could bypass the sandbox protection and execute arbitrary code on the Jenkins master.\r\n\r\n## Remediation\r\n\r\nUpgrade `org.jenkins-ci.plugins:script-security` to version 1.50 or higher.\r\n\r\n\r\n## References\r\n\r\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2019-01-08/#SECURITY-1266)\r\n\r\n- [GitHub Commit](https://github.com/jenkinsci/script-security-plugin/commit/2c5122e50742dd16492f9424992deb21cc07837c)\r\n",
      "disclosureTime": "2019-01-22T13:42:22Z",
      "fixedIn": [
        "1.50"
      ],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIPLUGINS-73604",
      "identifiers": {
        "CVE": [
          "CVE-2019-1003000"
        ],
        "CWE": [
          "CWE-265"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "script-security",
        "groupId": "org.jenkins-ci.plugins"
      },
      "modificationTime": "2019-01-24T16:14:28.218424Z",
      "moduleName": "org.jenkins-ci.plugins:script-security",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.plugins:script-security",
      "patches": [],
      "publicationTime": "2019-01-22T13:42:22Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2019-01-08/#SECURITY-1266"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/jenkinsci/script-security-plugin/commit/2c5122e50742dd16492f9424992deb21cc07837c"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.50)"
        ]
      },
      "severity": "high",
      "title": "Sandbox Bypass",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.plugins:matrix-project@1.4.1",
        "org.jenkins-ci.plugins:script-security@1.13"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.plugins:script-security",
      "version": "1.13"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2018-07-27T18:01:12.373000Z",
      "credit": [
        "Caleb Tennis"
      ],
      "cvssScore": 3.7,
      "description": "## Overview\n[org.jenkins-ci.plugins:mailer](https://github.com/jenkinsci/mailer-plugin) allows you to configure email notifications for build results.\n\nAffected versions of this package are vulnerable to Information Exposure.  \nIt could send emails to a dynamically created list of users based on the changelogs. This could in some cases result in emails being sent to people who have no user account in Jenkins.\n\n## Remediation\nUpgrade `org.jenkins-ci.plugins:mailer` to version 1.20 or higher.\n\n## References\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2017-03-20/)\n- [GitHub Commit](https://github.com/jenkinsci/mailer-plugin/commit/6eb53cf9ad06529df673a862c232226c0dcf30d9)\n",
      "disclosureTime": "2017-06-19T18:01:12.373000Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIPLUGINS-32440",
      "identifiers": {
        "CVE": [
          "CVE-2017-2651"
        ],
        "CWE": [
          "CWE-200"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "mailer",
        "groupId": "org.jenkins-ci.plugins"
      },
      "modificationTime": "2018-11-18T11:50:46.846805Z",
      "moduleName": "org.jenkins-ci.plugins:mailer",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.plugins:mailer",
      "patches": [],
      "publicationTime": "2018-07-29T13:36:47.462000Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2017-03-20/"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/jenkinsci/mailer-plugin/commit/6eb53cf9ad06529df673a862c232226c0dcf30d9"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.20)"
        ]
      },
      "severity": "low",
      "title": "Information Exposure",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.jenkins-ci.plugins:mailer@1.7"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.plugins:mailer",
      "version": "1.7"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2018-07-27T18:01:12.373000Z",
      "credit": [
        "Caleb Tennis"
      ],
      "cvssScore": 3.7,
      "description": "## Overview\n[org.jenkins-ci.plugins:mailer](https://github.com/jenkinsci/mailer-plugin) allows you to configure email notifications for build results.\n\nAffected versions of this package are vulnerable to Information Exposure.  \nIt could send emails to a dynamically created list of users based on the changelogs. This could in some cases result in emails being sent to people who have no user account in Jenkins.\n\n## Remediation\nUpgrade `org.jenkins-ci.plugins:mailer` to version 1.20 or higher.\n\n## References\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2017-03-20/)\n- [GitHub Commit](https://github.com/jenkinsci/mailer-plugin/commit/6eb53cf9ad06529df673a862c232226c0dcf30d9)\n",
      "disclosureTime": "2017-06-19T18:01:12.373000Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGJENKINSCIPLUGINS-32440",
      "identifiers": {
        "CVE": [
          "CVE-2017-2651"
        ],
        "CWE": [
          "CWE-200"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "mailer",
        "groupId": "org.jenkins-ci.plugins"
      },
      "modificationTime": "2018-11-18T11:50:46.846805Z",
      "moduleName": "org.jenkins-ci.plugins:mailer",
      "packageManager": "maven",
      "packageName": "org.jenkins-ci.plugins:mailer",
      "patches": [],
      "publicationTime": "2018-07-29T13:36:47.462000Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2017-03-20/"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/jenkinsci/mailer-plugin/commit/6eb53cf9ad06529df673a862c232226c0dcf30d9"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.20)"
        ]
      },
      "severity": "low",
      "title": "Information Exposure",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.jenkins-ci.plugins:mailer@1.7"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jenkins-ci.plugins:mailer",
      "version": "1.7"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2017-02-22T07:28:29.999000Z",
      "credit": [
        "Tommy Johansen"
      ],
      "cvssScore": 6.1,
      "description": "## Overview\n[`org.jsoup:jsoup`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22jsoup%22)\nAffected versions of the package are vulnerable to Cross-site Scripting (XSS) attacks which occurred due to of improperly handling tags without a closing `>` when reaching EOF. `JSoup` did not properly validate user-supplied HTML content. Certain HTML snippets could get past the validator without being detected as unsafe. A remote attacker could use a specially crafted HTML snippet to execute arbitrary web script in the user's browser.\n\n## Details\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\r\n\r\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\r\n\r\nֿInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\r\n\r\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\r\n \r\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \r\n\r\n### Types of attacks\r\nThere are a few methods by which XSS can be manipulated:\r\n\r\n|Type|Origin|Description|\r\n|--|--|--|\r\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\r\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \r\n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\r\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\r\n\r\n### Affected environments\r\nThe following environments are susceptible to an XSS attack:\r\n\r\n* Web servers\r\n* Application servers\r\n* Web application environments\r\n\r\n### How to prevent\r\nThis section describes the top best practices designed to specifically protect your code: \r\n\r\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \r\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \r\n* Give users the option to disable client-side scripts.\r\n* Redirect invalid requests.\r\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\r\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\r\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n\n## References\n- [OSS Security](http://seclists.org/oss-sec/2015/q3/452)\n- [GitHub PR](https://github.com/jhy/jsoup/pull/582)\n- [Redhat Bugzilla](https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-6748)\n",
      "disclosureTime": "2015-08-28T15:52:03Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGJSOUP-31218",
      "identifiers": {
        "CVE": [
          "CVE-2015-6748"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "jsoup",
        "groupId": "org.jsoup"
      },
      "modificationTime": "2018-11-18T11:50:45.093786Z",
      "moduleName": "org.jsoup:jsoup",
      "packageManager": "maven",
      "packageName": "org.jsoup:jsoup",
      "patches": [],
      "publicationTime": "2015-08-28T15:52:03Z",
      "references": [
        {
          "title": "OSS Security",
          "url": "http://seclists.org/oss-sec/2015/q3/452"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/jhy/jsoup/pull/582"
        },
        {
          "title": "Redhat Bugzilla",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-6748"
        }
      ],
      "semver": {
        "vulnerable": [
          "[1.6.0,1.8.3)"
        ]
      },
      "severity": "medium",
      "title": "Cross-site Scripting (XSS)",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.apache.maven.wagon:wagon-http@2.4",
        "org.apache.maven.wagon:wagon-http-shared4@2.4",
        "org.jsoup:jsoup@1.7.1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jsoup:jsoup",
      "version": "1.7.1"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2017-02-22T07:28:29.999000Z",
      "credit": [
        "Tommy Johansen"
      ],
      "cvssScore": 6.1,
      "description": "## Overview\n[`org.jsoup:jsoup`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22jsoup%22)\nAffected versions of the package are vulnerable to Cross-site Scripting (XSS) attacks which occurred due to of improperly handling tags without a closing `>` when reaching EOF. `JSoup` did not properly validate user-supplied HTML content. Certain HTML snippets could get past the validator without being detected as unsafe. A remote attacker could use a specially crafted HTML snippet to execute arbitrary web script in the user's browser.\n\n## Details\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\r\n\r\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\r\n\r\nֿInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\r\n\r\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\r\n \r\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \r\n\r\n### Types of attacks\r\nThere are a few methods by which XSS can be manipulated:\r\n\r\n|Type|Origin|Description|\r\n|--|--|--|\r\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\r\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \r\n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\r\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\r\n\r\n### Affected environments\r\nThe following environments are susceptible to an XSS attack:\r\n\r\n* Web servers\r\n* Application servers\r\n* Web application environments\r\n\r\n### How to prevent\r\nThis section describes the top best practices designed to specifically protect your code: \r\n\r\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \r\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \r\n* Give users the option to disable client-side scripts.\r\n* Redirect invalid requests.\r\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\r\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\r\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n\n## References\n- [OSS Security](http://seclists.org/oss-sec/2015/q3/452)\n- [GitHub PR](https://github.com/jhy/jsoup/pull/582)\n- [Redhat Bugzilla](https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-6748)\n",
      "disclosureTime": "2015-08-28T15:52:03Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGJSOUP-31218",
      "identifiers": {
        "CVE": [
          "CVE-2015-6748"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "jsoup",
        "groupId": "org.jsoup"
      },
      "modificationTime": "2018-11-18T11:50:45.093786Z",
      "moduleName": "org.jsoup:jsoup",
      "packageManager": "maven",
      "packageName": "org.jsoup:jsoup",
      "patches": [],
      "publicationTime": "2015-08-28T15:52:03Z",
      "references": [
        {
          "title": "OSS Security",
          "url": "http://seclists.org/oss-sec/2015/q3/452"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/jhy/jsoup/pull/582"
        },
        {
          "title": "Redhat Bugzilla",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-6748"
        }
      ],
      "semver": {
        "vulnerable": [
          "[1.6.0,1.8.3)"
        ]
      },
      "severity": "medium",
      "title": "Cross-site Scripting (XSS)",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.apache.maven.wagon:wagon-http@2.4",
        "org.apache.maven.wagon:wagon-http-shared4@2.4",
        "org.jsoup:jsoup@1.7.1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jsoup:jsoup",
      "version": "1.7.1"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2017-11-12T09:54:09.212000Z",
      "credit": [
        "Christian Heimes"
      ],
      "cvssScore": 6.5,
      "description": "## Overview\n[`org.kohsuke:libpam4j`](https://kohsuke.org) is a Java binding for libpam.\n\nAffected versions of the package are vulnerable to Access Restriction Bypass.\nA malicious user with a valid password for a disabled account can bypass the restrictions and get access to sensitive information.\n\n## Remediation\nThere is no fix version for `libpam4j`.\n\n## References\n- [Debian Security tracker](https://security-tracker.debian.org/tracker/CVE-2017-12197)\n- [Redhat Bugzilla](https://bugzilla.redhat.com/show_bug.cgi?id&#x3D;1503103)\n- [Github Issue](https://github.com/kohsuke/libpam4j/issues/18)\n- [Github Commit](https://github.com/letonez/libpam4j/commit/84f32f4001fc6bdcc125ccc959081de022d18b6d)\n",
      "disclosureTime": "2017-06-05T21:00:00Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGKOHSUKE-31583",
      "identifiers": {
        "CVE": [
          "CVE-2017-12197"
        ],
        "CWE": [
          "CWE-863"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "libpam4j",
        "groupId": "org.kohsuke"
      },
      "modificationTime": "2018-11-18T11:50:45.659845Z",
      "moduleName": "org.kohsuke:libpam4j",
      "packageManager": "maven",
      "packageName": "org.kohsuke:libpam4j",
      "patches": [],
      "publicationTime": "2017-11-16T09:54:09.212000Z",
      "references": [
        {
          "title": "Debian Security tracker",
          "url": "https://security-tracker.debian.org/tracker/CVE-2017-12197"
        },
        {
          "title": "Redhat Bugzilla",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id&#x3D;1503103"
        },
        {
          "title": "Github Issue",
          "url": "https://github.com/kohsuke/libpam4j/issues/18"
        },
        {
          "title": "Github Commit",
          "url": "https://github.com/letonez/libpam4j/commit/84f32f4001fc6bdcc125ccc959081de022d18b6d"
        }
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "severity": "medium",
      "title": "Access Restriction Bypass",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.kohsuke:libpam4j@1.11"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.kohsuke:libpam4j",
      "version": "1.11"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2017-11-12T09:54:09.212000Z",
      "credit": [
        "Christian Heimes"
      ],
      "cvssScore": 6.5,
      "description": "## Overview\n[`org.kohsuke:libpam4j`](https://kohsuke.org) is a Java binding for libpam.\n\nAffected versions of the package are vulnerable to Access Restriction Bypass.\nA malicious user with a valid password for a disabled account can bypass the restrictions and get access to sensitive information.\n\n## Remediation\nThere is no fix version for `libpam4j`.\n\n## References\n- [Debian Security tracker](https://security-tracker.debian.org/tracker/CVE-2017-12197)\n- [Redhat Bugzilla](https://bugzilla.redhat.com/show_bug.cgi?id&#x3D;1503103)\n- [Github Issue](https://github.com/kohsuke/libpam4j/issues/18)\n- [Github Commit](https://github.com/letonez/libpam4j/commit/84f32f4001fc6bdcc125ccc959081de022d18b6d)\n",
      "disclosureTime": "2017-06-05T21:00:00Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGKOHSUKE-31583",
      "identifiers": {
        "CVE": [
          "CVE-2017-12197"
        ],
        "CWE": [
          "CWE-863"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "libpam4j",
        "groupId": "org.kohsuke"
      },
      "modificationTime": "2018-11-18T11:50:45.659845Z",
      "moduleName": "org.kohsuke:libpam4j",
      "packageManager": "maven",
      "packageName": "org.kohsuke:libpam4j",
      "patches": [],
      "publicationTime": "2017-11-16T09:54:09.212000Z",
      "references": [
        {
          "title": "Debian Security tracker",
          "url": "https://security-tracker.debian.org/tracker/CVE-2017-12197"
        },
        {
          "title": "Redhat Bugzilla",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id&#x3D;1503103"
        },
        {
          "title": "Github Issue",
          "url": "https://github.com/kohsuke/libpam4j/issues/18"
        },
        {
          "title": "Github Commit",
          "url": "https://github.com/letonez/libpam4j/commit/84f32f4001fc6bdcc125ccc959081de022d18b6d"
        }
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "severity": "medium",
      "title": "Access Restriction Bypass",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.kohsuke:libpam4j@1.11"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.kohsuke:libpam4j",
      "version": "1.11"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2018-12-10T15:53:30.118446Z",
      "credit": [
        "Man Yue Mo"
      ],
      "cvssScore": 8.8,
      "description": "## Overview\n[org.kohsuke:groovy-sandbox](https://github.com/jenkinsci/groovy-sandbox) is a Compile-time transformer to run Groovy code in a restrictive sandbox.\r\n\r\nAffected versions of this package are vulnerable to Access Restriction Bypass via the `org/kohsuke/groovy/sandbox/SandboxTransformer.java` method. An attacker with `Job/Configure` permission could execute arbitrary code on the Jenkins master JVM, if plugins using the Groovy sandbox are installed.\r\n\r\n## Remediation\r\nUpgrade `org.kohsuke:groovy-sandbox` to version 2.60 or higher.\n\n## References\n- [Github Commit](https://github.com/jenkinsci/groovy-sandbox/commit/0cd7ec12b7c56cfa3167d99c5f43147ce05449d3)\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2018-10-29/#SECURITY-1186)\n",
      "disclosureTime": "2018-12-10T14:19:39Z",
      "fixedIn": [
        "2.60"
      ],
      "functions": [],
      "id": "SNYK-JAVA-ORGKOHSUKE-72667",
      "identifiers": {
        "CVE": [
          "CVE-2018-1000865"
        ],
        "CWE": [
          "CWE-284"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "groovy-sandbox",
        "groupId": "org.kohsuke"
      },
      "modificationTime": "2018-12-10T19:25:41.650554Z",
      "moduleName": "org.kohsuke:groovy-sandbox",
      "packageManager": "maven",
      "packageName": "org.kohsuke:groovy-sandbox",
      "patches": [],
      "publicationTime": "2018-12-10T19:25:41.632480Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2018-10-29/#SECURITY-1186"
        },
        {
          "title": "Github Commit",
          "url": "https://github.com/jenkinsci/groovy-sandbox/commit/0cd7ec12b7c56cfa3167d99c5f43147ce05449d3"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.60)"
        ]
      },
      "severity": "high",
      "title": "Access Restriction Bypass",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.plugins:matrix-project@1.4.1",
        "org.jenkins-ci.plugins:script-security@1.13",
        "org.kohsuke:groovy-sandbox@1.8"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.kohsuke:groovy-sandbox",
      "version": "1.8"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2018-12-10T15:53:30.118446Z",
      "credit": [
        "Man Yue Mo"
      ],
      "cvssScore": 8.8,
      "description": "## Overview\n[org.kohsuke:groovy-sandbox](https://github.com/jenkinsci/groovy-sandbox) is a Compile-time transformer to run Groovy code in a restrictive sandbox.\r\n\r\nAffected versions of this package are vulnerable to Access Restriction Bypass via the `org/kohsuke/groovy/sandbox/SandboxTransformer.java` method. An attacker with `Job/Configure` permission could execute arbitrary code on the Jenkins master JVM, if plugins using the Groovy sandbox are installed.\r\n\r\n## Remediation\r\nUpgrade `org.kohsuke:groovy-sandbox` to version 2.60 or higher.\n\n## References\n- [Github Commit](https://github.com/jenkinsci/groovy-sandbox/commit/0cd7ec12b7c56cfa3167d99c5f43147ce05449d3)\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2018-10-29/#SECURITY-1186)\n",
      "disclosureTime": "2018-12-10T14:19:39Z",
      "fixedIn": [
        "2.60"
      ],
      "functions": [],
      "id": "SNYK-JAVA-ORGKOHSUKE-72667",
      "identifiers": {
        "CVE": [
          "CVE-2018-1000865"
        ],
        "CWE": [
          "CWE-284"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "groovy-sandbox",
        "groupId": "org.kohsuke"
      },
      "modificationTime": "2018-12-10T19:25:41.650554Z",
      "moduleName": "org.kohsuke:groovy-sandbox",
      "packageManager": "maven",
      "packageName": "org.kohsuke:groovy-sandbox",
      "patches": [],
      "publicationTime": "2018-12-10T19:25:41.632480Z",
      "references": [
        {
          "title": "Jenkins Security Advisory",
          "url": "https://jenkins.io/security/advisory/2018-10-29/#SECURITY-1186"
        },
        {
          "title": "Github Commit",
          "url": "https://github.com/jenkinsci/groovy-sandbox/commit/0cd7ec12b7c56cfa3167d99c5f43147ce05449d3"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,2.60)"
        ]
      },
      "severity": "high",
      "title": "Access Restriction Bypass",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.plugins:matrix-project@1.4.1",
        "org.jenkins-ci.plugins:script-security@1.13",
        "org.kohsuke:groovy-sandbox@1.8"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.kohsuke:groovy-sandbox",
      "version": "1.8"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2017-02-22T07:28:31.538000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 6.3,
      "description": "## Overview\n[`org.springframework:spring-web`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-web%22)\nAffected versions of this package do not disable external entity resolution, which allows remote attackers to read arbitrary files, cause a denial of service and conduct CSRF attacks via crafted XML, aka an XML External Entity (XXE) issue.  \n\n**NOTE:** this vulnerability exists because of an incomplete fix for [CVE-2013-4152](https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-31330), [CVE-2013-7315](https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-30162), and [CVE-2013-6429](https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-30160).\n\n## References\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0054)\n",
      "disclosureTime": "2014-06-06T21:43:43Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-31331",
      "identifiers": {
        "CVE": [
          "CVE-2014-0054"
        ],
        "CWE": [
          "CWE-352"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "spring-web",
        "groupId": "org.springframework"
      },
      "modificationTime": "2018-11-18T11:50:45.208763Z",
      "moduleName": "org.springframework:spring-web",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-web",
      "patches": [],
      "publicationTime": "2014-06-06T21:43:43Z",
      "references": [
        {
          "title": "NVD",
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0054"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,3.2.8), [4,4.0.2)"
        ]
      },
      "severity": "medium",
      "title": "Cross-site Request Forgery (CSRF)",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.springframework:spring-webmvc@2.5.6.SEC03",
        "org.springframework:spring-web@2.5.6.SEC03"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.springframework:spring-web",
      "version": "2.5.6.SEC03"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2017-02-22T07:28:31.538000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 6.3,
      "description": "## Overview\n[`org.springframework:spring-web`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-web%22)\nAffected versions of this package do not disable external entity resolution, which allows remote attackers to read arbitrary files, cause a denial of service and conduct CSRF attacks via crafted XML, aka an XML External Entity (XXE) issue.  \n\n**NOTE:** this vulnerability exists because of an incomplete fix for [CVE-2013-4152](https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-31330), [CVE-2013-7315](https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-30162), and [CVE-2013-6429](https://snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-30160).\n\n## References\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0054)\n",
      "disclosureTime": "2014-06-06T21:43:43Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-31331",
      "identifiers": {
        "CVE": [
          "CVE-2014-0054"
        ],
        "CWE": [
          "CWE-352"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "spring-web",
        "groupId": "org.springframework"
      },
      "modificationTime": "2018-11-18T11:50:45.208763Z",
      "moduleName": "org.springframework:spring-web",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-web",
      "patches": [],
      "publicationTime": "2014-06-06T21:43:43Z",
      "references": [
        {
          "title": "NVD",
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0054"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,3.2.8), [4,4.0.2)"
        ]
      },
      "severity": "medium",
      "title": "Cross-site Request Forgery (CSRF)",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.springframework:spring-webmvc@2.5.6.SEC03",
        "org.springframework:spring-web@2.5.6.SEC03"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.springframework:spring-web",
      "version": "2.5.6.SEC03"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2017-02-22T07:28:31.551000Z",
      "credit": [
        "Shumpei Asahara",
        "Yuji Ito"
      ],
      "cvssScore": 7.5,
      "description": "## Overview\r\n[`org.springframework:spring-webmvc`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-webmvc%22)\r\nAn issue was discovered in Pivotal Spring Framework before 3.2.18, 4.2.x before 4.2.9, and 4.3.x before 4.3.5. Paths provided to the `ResourceServlet` were not properly sanitized and as a result exposed to directory traversal attacks.\r\n\r\n## Details\r\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\r\n\r\nDirectory Traversal vulnerabilities can be generally divided into two types:\r\n\r\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\r\n\r\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\r\n\r\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\r\n\r\n```\r\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\r\n```\r\n**Note** `%2e` is the URL encoded version of `.` (dot).\r\n\r\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \r\n\r\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\r\n\r\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\r\n\r\n```\r\n2018-04-15 22:04:29 .....           19           19  good.txt\r\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\r\n```\n\n## References\n- [GitHub Commit](https://github.com/spring-projects/spring-framework/commit/e2d6e709c3c65a4951eb096843ee75d5200cfcad)\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-9878)\n- [Pivotal Security Advisory](https://pivotal.io/security/cve-2016-9878)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1408164)\n- [Spring Jira Issue](https://jira.spring.io/browse/SPR-14946)\n",
      "disclosureTime": "2016-12-28T07:29:41Z",
      "fixedIn": [
        "3.2.18.RELEASE",
        "4.2.9.RELEASE",
        "4.3.5.RELEASE"
      ],
      "functions": [
        {
          "functionId": {
            "className": "ResourceServlet",
            "filePath": "org/springframework/web/servlet/ResourceServlet.java",
            "functionName": "doInclude"
          },
          "version": [
            "[1.2.1,3.1.4.RELEASE]",
            "[3.2.0.RELEASE,3.2.18.RELEASE)",
            "[4.2.0.RELEASE,4.2.9.RELEASE)",
            "[4.3.0.RELEASE,4.3.5.RELEASE)"
          ]
        }
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-31332",
      "identifiers": {
        "CVE": [
          "CVE-2016-9878"
        ],
        "CWE": [
          "CWE-22"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "spring-webmvc",
        "groupId": "org.springframework"
      },
      "modificationTime": "2018-11-21T10:10:06.542269Z",
      "moduleName": "org.springframework:spring-webmvc",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-webmvc",
      "patches": [],
      "publicationTime": "2016-12-28T07:29:41Z",
      "references": [
        {
          "title": "RedHat Bugzilla Bug",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1408164"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-framework/commit/e2d6e709c3c65a4951eb096843ee75d5200cfcad"
        },
        {
          "title": "Spring Jira Issue",
          "url": "https://jira.spring.io/browse/SPR-14946"
        },
        {
          "title": "NVD",
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-9878"
        },
        {
          "title": "Pivotal Security Advisory",
          "url": "https://pivotal.io/security/cve-2016-9878"
        }
      ],
      "semver": {
        "vulnerable": [
          "[1.2.1,3.1.4.RELEASE],[3.2.0.RELEASE,3.2.18.RELEASE),[4.2.0.RELEASE,4.2.9.RELEASE),[4.3.0.RELEASE,4.3.5.RELEASE)"
        ]
      },
      "severity": "high",
      "title": "Directory Traversal",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.springframework:spring-webmvc@2.5.6.SEC03"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.springframework:spring-webmvc",
      "version": "2.5.6.SEC03"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2017-09-20T11:27:22.378000Z",
      "credit": [
        "Juergen Hoeller"
      ],
      "cvssScore": 4.3,
      "description": "## Overview\nAffected versions of [`org.springframework:spring-webmvc`](https://springframework.org)  are vulnerable to Cross-site Scripting (XSS) attacks. The `LocaleChangeInterceptor` does not escape user input values from an HTTP request.\n\n## Details\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\r\n\r\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\r\n\r\nֿInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\r\n\r\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\r\n \r\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \r\n\r\n### Types of attacks\r\nThere are a few methods by which XSS can be manipulated:\r\n\r\n|Type|Origin|Description|\r\n|--|--|--|\r\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\r\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \r\n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\r\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\r\n\r\n### Affected environments\r\nThe following environments are susceptible to an XSS attack:\r\n\r\n* Web servers\r\n* Application servers\r\n* Web application environments\r\n\r\n### How to prevent\r\nThis section describes the top best practices designed to specifically protect your code: \r\n\r\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \r\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \r\n* Give users the option to disable client-side scripts.\r\n* Redirect invalid requests.\r\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\r\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\r\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n\n## Remediation\nUpgrade `org.springframework:spring-webmvc` to version 3.0.6 or higher.\n\n## References\n- [Jira Issue](https://jira.spring.io/browse/SPR-7779)\n- [Release Notes](https://docs.spring.io/spring/docs/3.0.6.RELEASE/changelog.txt)\n",
      "disclosureTime": "2010-11-30T22:00:00Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-31512",
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-79"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "spring-webmvc",
        "groupId": "org.springframework"
      },
      "modificationTime": "2018-11-18T11:50:45.544164Z",
      "moduleName": "org.springframework:spring-webmvc",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-webmvc",
      "patches": [],
      "publicationTime": "2017-09-20T06:27:22.378000Z",
      "references": [
        {
          "title": "Jira Issue",
          "url": "https://jira.spring.io/browse/SPR-7779"
        },
        {
          "title": "Release Notes",
          "url": "https://docs.spring.io/spring/docs/3.0.6.RELEASE/changelog.txt"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,3.0.6)"
        ]
      },
      "severity": "medium",
      "title": "Cross-site Scripting (XSS)",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.springframework:spring-webmvc@2.5.6.SEC03"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.springframework:spring-webmvc",
      "version": "2.5.6.SEC03"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2018-04-09T10:37:27.476000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 7.5,
      "description": "## Overview\n[org.springframework:spring-webmvc](https://mvnrepository.com/artifact/org.springframework/spring-webmvc) Spring provides everything you need beyond the Java language to create enterprise applications in a wide range of scenarios and architectures.\n\nAffected versions of this package are vulnerable to Multipart Content Pollution. It provides client-side support for multipart requests. When the server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.\n\n## Remediation\nUpgrade `org.springframework:spring-webmvc` to version 4.3.14, 5.0.5 or higher.\n\n## References\n- [Pivotal Security Advisory](https://pivotal.io/security/cve-2018-1272)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2018-1272)\n",
      "disclosureTime": "2018-04-09T10:37:27.476000Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-32199",
      "identifiers": {
        "CVE": [
          "CVE-2018-1272"
        ],
        "CWE": [
          "CWE-94"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "spring-webmvc",
        "groupId": "org.springframework"
      },
      "modificationTime": "2018-11-22T10:10:08.822537Z",
      "moduleName": "org.springframework:spring-webmvc",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-webmvc",
      "patches": [],
      "publicationTime": "2018-04-09T15:17:27.126000Z",
      "references": [
        {
          "title": "Pivotal Security Advisory",
          "url": "https://pivotal.io/security/cve-2018-1272"
        },
        {
          "title": "NVD",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-1272"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,4.3.14), [5.0.0,5.0.5)"
        ]
      },
      "severity": "high",
      "title": "Multipart Content Pollution",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.springframework:spring-webmvc@2.5.6.SEC03"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.springframework:spring-webmvc",
      "version": "2.5.6.SEC03"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2018-04-09T10:37:27.442000Z",
      "credit": [
        "Orange Tsai"
      ],
      "cvssScore": 5.9,
      "description": "## Overview\n[org.springframework:spring-webmvc](https://mvnrepository.com/artifact/org.springframework/spring-webmvc) Spring provides everything you need beyond the Java language to create enterprise applications in a wide range of scenarios and architectures.\n\nAffected versions of this package are vulnerable to Directory Traversal. When static resources are served from a file system on Windows (as opposed to the classpath, or the ServletContext), a malicious user can send a request using a specially crafted URL that can lead a directory traversal attack.\n\n## Details\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\r\n\r\nDirectory Traversal vulnerabilities can be generally divided into two types:\r\n\r\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\r\n\r\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\r\n\r\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\r\n\r\n```\r\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\r\n```\r\n**Note** `%2e` is the URL encoded version of `.` (dot).\r\n\r\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \r\n\r\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\r\n\r\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\r\n\r\n```\r\n2018-04-15 22:04:29 .....           19           19  good.txt\r\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\r\n```\n\n\n## Remediation\nUpgrade `org.springframework:spring-webmvc` to version 4.3.15, 5.0.5 or higher.\n\n## References\n- [Pivotal Security Advisory](https://pivotal.io/security/cve-2018-1271)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2018-1271)\n",
      "disclosureTime": "2018-04-06T10:37:27.442000Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-32202",
      "identifiers": {
        "CVE": [
          "CVE-2018-1271"
        ],
        "CWE": [
          "CWE-23"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "spring-webmvc",
        "groupId": "org.springframework"
      },
      "modificationTime": "2018-11-22T10:10:11.874766Z",
      "moduleName": "org.springframework:spring-webmvc",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-webmvc",
      "patches": [],
      "publicationTime": "2018-04-09T15:17:27.182000Z",
      "references": [
        {
          "title": "Pivotal Security Advisory",
          "url": "https://pivotal.io/security/cve-2018-1271"
        },
        {
          "title": "NVD",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-1271"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,4.3.15), [5.0.0,5.0.5)"
        ]
      },
      "severity": "medium",
      "title": "Directory Traversal",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.springframework:spring-webmvc@2.5.6.SEC03"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.springframework:spring-webmvc",
      "version": "2.5.6.SEC03"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2017-02-22T07:28:31.551000Z",
      "credit": [
        "Shumpei Asahara",
        "Yuji Ito"
      ],
      "cvssScore": 7.5,
      "description": "## Overview\r\n[`org.springframework:spring-webmvc`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-webmvc%22)\r\nAn issue was discovered in Pivotal Spring Framework before 3.2.18, 4.2.x before 4.2.9, and 4.3.x before 4.3.5. Paths provided to the `ResourceServlet` were not properly sanitized and as a result exposed to directory traversal attacks.\r\n\r\n## Details\r\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\r\n\r\nDirectory Traversal vulnerabilities can be generally divided into two types:\r\n\r\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\r\n\r\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\r\n\r\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\r\n\r\n```\r\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\r\n```\r\n**Note** `%2e` is the URL encoded version of `.` (dot).\r\n\r\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \r\n\r\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\r\n\r\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\r\n\r\n```\r\n2018-04-15 22:04:29 .....           19           19  good.txt\r\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\r\n```\n\n## References\n- [GitHub Commit](https://github.com/spring-projects/spring-framework/commit/e2d6e709c3c65a4951eb096843ee75d5200cfcad)\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-9878)\n- [Pivotal Security Advisory](https://pivotal.io/security/cve-2016-9878)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1408164)\n- [Spring Jira Issue](https://jira.spring.io/browse/SPR-14946)\n",
      "disclosureTime": "2016-12-28T07:29:41Z",
      "fixedIn": [
        "3.2.18.RELEASE",
        "4.2.9.RELEASE",
        "4.3.5.RELEASE"
      ],
      "functions": [
        {
          "functionId": {
            "className": "ResourceServlet",
            "filePath": "org/springframework/web/servlet/ResourceServlet.java",
            "functionName": "doInclude"
          },
          "version": [
            "[1.2.1,3.1.4.RELEASE]",
            "[3.2.0.RELEASE,3.2.18.RELEASE)",
            "[4.2.0.RELEASE,4.2.9.RELEASE)",
            "[4.3.0.RELEASE,4.3.5.RELEASE)"
          ]
        }
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-31332",
      "identifiers": {
        "CVE": [
          "CVE-2016-9878"
        ],
        "CWE": [
          "CWE-22"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "spring-webmvc",
        "groupId": "org.springframework"
      },
      "modificationTime": "2018-11-21T10:10:06.542269Z",
      "moduleName": "org.springframework:spring-webmvc",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-webmvc",
      "patches": [],
      "publicationTime": "2016-12-28T07:29:41Z",
      "references": [
        {
          "title": "RedHat Bugzilla Bug",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1408164"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-framework/commit/e2d6e709c3c65a4951eb096843ee75d5200cfcad"
        },
        {
          "title": "Spring Jira Issue",
          "url": "https://jira.spring.io/browse/SPR-14946"
        },
        {
          "title": "NVD",
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-9878"
        },
        {
          "title": "Pivotal Security Advisory",
          "url": "https://pivotal.io/security/cve-2016-9878"
        }
      ],
      "semver": {
        "vulnerable": [
          "[1.2.1,3.1.4.RELEASE],[3.2.0.RELEASE,3.2.18.RELEASE),[4.2.0.RELEASE,4.2.9.RELEASE),[4.3.0.RELEASE,4.3.5.RELEASE)"
        ]
      },
      "severity": "high",
      "title": "Directory Traversal",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.springframework:spring-webmvc@2.5.6.SEC03"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.springframework:spring-webmvc",
      "version": "2.5.6.SEC03"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2017-09-20T11:27:22.378000Z",
      "credit": [
        "Juergen Hoeller"
      ],
      "cvssScore": 4.3,
      "description": "## Overview\nAffected versions of [`org.springframework:spring-webmvc`](https://springframework.org)  are vulnerable to Cross-site Scripting (XSS) attacks. The `LocaleChangeInterceptor` does not escape user input values from an HTTP request.\n\n## Details\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\r\n\r\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\r\n\r\nֿInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\r\n\r\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\r\n \r\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \r\n\r\n### Types of attacks\r\nThere are a few methods by which XSS can be manipulated:\r\n\r\n|Type|Origin|Description|\r\n|--|--|--|\r\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\r\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \r\n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\r\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\r\n\r\n### Affected environments\r\nThe following environments are susceptible to an XSS attack:\r\n\r\n* Web servers\r\n* Application servers\r\n* Web application environments\r\n\r\n### How to prevent\r\nThis section describes the top best practices designed to specifically protect your code: \r\n\r\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \r\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \r\n* Give users the option to disable client-side scripts.\r\n* Redirect invalid requests.\r\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\r\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\r\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n\n## Remediation\nUpgrade `org.springframework:spring-webmvc` to version 3.0.6 or higher.\n\n## References\n- [Jira Issue](https://jira.spring.io/browse/SPR-7779)\n- [Release Notes](https://docs.spring.io/spring/docs/3.0.6.RELEASE/changelog.txt)\n",
      "disclosureTime": "2010-11-30T22:00:00Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-31512",
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-79"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "spring-webmvc",
        "groupId": "org.springframework"
      },
      "modificationTime": "2018-11-18T11:50:45.544164Z",
      "moduleName": "org.springframework:spring-webmvc",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-webmvc",
      "patches": [],
      "publicationTime": "2017-09-20T06:27:22.378000Z",
      "references": [
        {
          "title": "Jira Issue",
          "url": "https://jira.spring.io/browse/SPR-7779"
        },
        {
          "title": "Release Notes",
          "url": "https://docs.spring.io/spring/docs/3.0.6.RELEASE/changelog.txt"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,3.0.6)"
        ]
      },
      "severity": "medium",
      "title": "Cross-site Scripting (XSS)",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.springframework:spring-webmvc@2.5.6.SEC03"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.springframework:spring-webmvc",
      "version": "2.5.6.SEC03"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2018-04-09T10:37:27.476000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 7.5,
      "description": "## Overview\n[org.springframework:spring-webmvc](https://mvnrepository.com/artifact/org.springframework/spring-webmvc) Spring provides everything you need beyond the Java language to create enterprise applications in a wide range of scenarios and architectures.\n\nAffected versions of this package are vulnerable to Multipart Content Pollution. It provides client-side support for multipart requests. When the server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.\n\n## Remediation\nUpgrade `org.springframework:spring-webmvc` to version 4.3.14, 5.0.5 or higher.\n\n## References\n- [Pivotal Security Advisory](https://pivotal.io/security/cve-2018-1272)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2018-1272)\n",
      "disclosureTime": "2018-04-09T10:37:27.476000Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-32199",
      "identifiers": {
        "CVE": [
          "CVE-2018-1272"
        ],
        "CWE": [
          "CWE-94"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "spring-webmvc",
        "groupId": "org.springframework"
      },
      "modificationTime": "2018-11-22T10:10:08.822537Z",
      "moduleName": "org.springframework:spring-webmvc",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-webmvc",
      "patches": [],
      "publicationTime": "2018-04-09T15:17:27.126000Z",
      "references": [
        {
          "title": "Pivotal Security Advisory",
          "url": "https://pivotal.io/security/cve-2018-1272"
        },
        {
          "title": "NVD",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-1272"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,4.3.14), [5.0.0,5.0.5)"
        ]
      },
      "severity": "high",
      "title": "Multipart Content Pollution",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.springframework:spring-webmvc@2.5.6.SEC03"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.springframework:spring-webmvc",
      "version": "2.5.6.SEC03"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2018-04-09T10:37:27.442000Z",
      "credit": [
        "Orange Tsai"
      ],
      "cvssScore": 5.9,
      "description": "## Overview\n[org.springframework:spring-webmvc](https://mvnrepository.com/artifact/org.springframework/spring-webmvc) Spring provides everything you need beyond the Java language to create enterprise applications in a wide range of scenarios and architectures.\n\nAffected versions of this package are vulnerable to Directory Traversal. When static resources are served from a file system on Windows (as opposed to the classpath, or the ServletContext), a malicious user can send a request using a specially crafted URL that can lead a directory traversal attack.\n\n## Details\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\r\n\r\nDirectory Traversal vulnerabilities can be generally divided into two types:\r\n\r\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\r\n\r\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\r\n\r\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\r\n\r\n```\r\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\r\n```\r\n**Note** `%2e` is the URL encoded version of `.` (dot).\r\n\r\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \r\n\r\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\r\n\r\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\r\n\r\n```\r\n2018-04-15 22:04:29 .....           19           19  good.txt\r\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\r\n```\n\n\n## Remediation\nUpgrade `org.springframework:spring-webmvc` to version 4.3.15, 5.0.5 or higher.\n\n## References\n- [Pivotal Security Advisory](https://pivotal.io/security/cve-2018-1271)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2018-1271)\n",
      "disclosureTime": "2018-04-06T10:37:27.442000Z",
      "fixedIn": [],
      "functions": [],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-32202",
      "identifiers": {
        "CVE": [
          "CVE-2018-1271"
        ],
        "CWE": [
          "CWE-23"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "spring-webmvc",
        "groupId": "org.springframework"
      },
      "modificationTime": "2018-11-22T10:10:11.874766Z",
      "moduleName": "org.springframework:spring-webmvc",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-webmvc",
      "patches": [],
      "publicationTime": "2018-04-09T15:17:27.182000Z",
      "references": [
        {
          "title": "Pivotal Security Advisory",
          "url": "https://pivotal.io/security/cve-2018-1271"
        },
        {
          "title": "NVD",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-1271"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,4.3.15), [5.0.0,5.0.5)"
        ]
      },
      "severity": "medium",
      "title": "Directory Traversal",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.springframework:spring-webmvc@2.5.6.SEC03"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.springframework:spring-webmvc",
      "version": "2.5.6.SEC03"
    },
    {
      "license": "(EPL-1.0 OR GPL-2.0 OR GPL-3.0)",
      "semver": {
        "vulnerable": [
          "[3.0.45,)"
        ]
      },
      "id": "snyk:lic:maven:com.github.jnr:jnr-posix:(EPL-1.0_OR_GPL-2.0_OR_GPL-3.0)",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "com.github.jnr:jnr-posix",
      "title": "Multiple licenses: EPL-1.0, GPL-2.0, GPL-3.0",
      "description": "Multiple licenses: EPL-1.0, GPL-2.0, GPL-3.0",
      "publicationTime": "2019-04-17T07:34:01.498Z",
      "creationTime": "2019-04-17T07:34:01.498Z",
      "licenseTemplateUrl": [
        "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
        "https://raw.githubusercontent.com/spdx/license-list/master/GPL-2.0.txt",
        "https://raw.githubusercontent.com/spdx/license-list/master/GPL-3.0.txt"
      ],
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "com.github.jnr:jnr-posix@3.0.45"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "com.github.jnr:jnr-posix",
      "version": "3.0.45"
    },
    {
      "license": "(EPL-1.0 OR GPL-2.0 OR GPL-3.0)",
      "semver": {
        "vulnerable": [
          "[3.0.45,)"
        ]
      },
      "id": "snyk:lic:maven:com.github.jnr:jnr-posix:(EPL-1.0_OR_GPL-2.0_OR_GPL-3.0)",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "com.github.jnr:jnr-posix",
      "title": "Multiple licenses: EPL-1.0, GPL-2.0, GPL-3.0",
      "description": "Multiple licenses: EPL-1.0, GPL-2.0, GPL-3.0",
      "publicationTime": "2019-04-17T07:34:01.498Z",
      "creationTime": "2019-04-17T07:34:01.498Z",
      "licenseTemplateUrl": [
        "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
        "https://raw.githubusercontent.com/spdx/license-list/master/GPL-2.0.txt",
        "https://raw.githubusercontent.com/spdx/license-list/master/GPL-3.0.txt"
      ],
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "com.github.jnr:jnr-posix@3.0.45"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "com.github.jnr:jnr-posix",
      "version": "3.0.45"
    },
    {
      "license": "LGPL-3.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:jfree:jcommon:LGPL-3.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "jfree:jcommon",
      "title": "LGPL-3.0 license",
      "description": "LGPL-3.0 license",
      "publicationTime": "2019-04-17T08:54:25.884Z",
      "creationTime": "2019-04-17T08:54:25.884Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/LGPL-3.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "jfree:jfreechart@1.0.9",
        "jfree:jcommon@1.0.12"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "jfree:jcommon",
      "version": "1.0.12"
    },
    {
      "license": "LGPL-3.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:jfree:jcommon:LGPL-3.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "jfree:jcommon",
      "title": "LGPL-3.0 license",
      "description": "LGPL-3.0 license",
      "publicationTime": "2019-04-17T08:54:25.884Z",
      "creationTime": "2019-04-17T08:54:25.884Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/LGPL-3.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "jfree:jfreechart@1.0.9",
        "jfree:jcommon@1.0.12"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "jfree:jcommon",
      "version": "1.0.12"
    },
    {
      "license": "LGPL-3.0",
      "semver": {
        "vulnerable": [
          "[1.0.0-rc1,)"
        ]
      },
      "id": "snyk:lic:maven:jfree:jfreechart:LGPL-3.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "jfree:jfreechart",
      "title": "LGPL-3.0 license",
      "description": "LGPL-3.0 license",
      "publicationTime": "2019-04-17T08:54:25.894Z",
      "creationTime": "2019-04-17T08:54:25.894Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/LGPL-3.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "jfree:jfreechart@1.0.9"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "jfree:jfreechart",
      "version": "1.0.9"
    },
    {
      "license": "LGPL-3.0",
      "semver": {
        "vulnerable": [
          "[1.0.0-rc1,)"
        ]
      },
      "id": "snyk:lic:maven:jfree:jfreechart:LGPL-3.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "jfree:jfreechart",
      "title": "LGPL-3.0 license",
      "description": "LGPL-3.0 license",
      "publicationTime": "2019-04-17T08:54:25.894Z",
      "creationTime": "2019-04-17T08:54:25.894Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/LGPL-3.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "jfree:jfreechart@1.0.9"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "jfree:jfreechart",
      "version": "1.0.9"
    },
    {
      "license": "EPL-1.0",
      "semver": {
        "vulnerable": [
          "[4.12-beta-1,)"
        ]
      },
      "id": "snyk:lic:maven:junit:junit:EPL-1.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "junit:junit",
      "title": "EPL-1.0 license",
      "description": "EPL-1.0 license",
      "publicationTime": "2019-04-17T08:54:32.191Z",
      "creationTime": "2019-04-17T08:54:32.191Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "commons-httpclient:commons-httpclient@3.1-jenkins-1",
        "junit:junit@4.12"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "junit:junit",
      "version": "4.12"
    },
    {
      "license": "EPL-1.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.eclipse.aether:aether-api:EPL-1.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.eclipse.aether:aether-api",
      "title": "EPL-1.0 license",
      "description": "EPL-1.0 license",
      "publicationTime": "2019-04-17T10:31:51.317Z",
      "creationTime": "2019-04-17T10:31:51.317Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.eclipse.aether:aether-api@0.9.0.M3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.eclipse.aether:aether-api",
      "version": "0.9.0.M3"
    },
    {
      "license": "EPL-1.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.eclipse.aether:aether-api:EPL-1.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.eclipse.aether:aether-api",
      "title": "EPL-1.0 license",
      "description": "EPL-1.0 license",
      "publicationTime": "2019-04-17T10:31:51.317Z",
      "creationTime": "2019-04-17T10:31:51.317Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.eclipse.aether:aether-api@0.9.0.M3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.eclipse.aether:aether-api",
      "version": "0.9.0.M3"
    },
    {
      "license": "EPL-1.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.eclipse.aether:aether-connector-wagon:EPL-1.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.eclipse.aether:aether-connector-wagon",
      "title": "EPL-1.0 license",
      "description": "EPL-1.0 license",
      "publicationTime": "2019-04-17T10:31:51.414Z",
      "creationTime": "2019-04-17T10:31:51.414Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.jenkins-ci.lib:lib-jenkins-maven-embedder@3.11",
        "org.eclipse.aether:aether-connector-wagon@0.9.0.M2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.eclipse.aether:aether-connector-wagon",
      "version": "0.9.0.M2"
    },
    {
      "license": "EPL-1.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.eclipse.aether:aether-connector-wagon:EPL-1.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.eclipse.aether:aether-connector-wagon",
      "title": "EPL-1.0 license",
      "description": "EPL-1.0 license",
      "publicationTime": "2019-04-17T10:31:51.414Z",
      "creationTime": "2019-04-17T10:31:51.414Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.jenkins-ci.lib:lib-jenkins-maven-embedder@3.11",
        "org.eclipse.aether:aether-connector-wagon@0.9.0.M2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.eclipse.aether:aether-connector-wagon",
      "version": "0.9.0.M2"
    },
    {
      "license": "EPL-1.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.eclipse.aether:aether-impl:EPL-1.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.eclipse.aether:aether-impl",
      "title": "EPL-1.0 license",
      "description": "EPL-1.0 license",
      "publicationTime": "2019-04-17T10:31:51.477Z",
      "creationTime": "2019-04-17T10:31:51.477Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.eclipse.aether:aether-impl@0.9.0.M3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.eclipse.aether:aether-impl",
      "version": "0.9.0.M3"
    },
    {
      "license": "EPL-1.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.eclipse.aether:aether-impl:EPL-1.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.eclipse.aether:aether-impl",
      "title": "EPL-1.0 license",
      "description": "EPL-1.0 license",
      "publicationTime": "2019-04-17T10:31:51.477Z",
      "creationTime": "2019-04-17T10:31:51.477Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.eclipse.aether:aether-impl@0.9.0.M3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.eclipse.aether:aether-impl",
      "version": "0.9.0.M3"
    },
    {
      "license": "EPL-1.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.eclipse.aether:aether-spi:EPL-1.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.eclipse.aether:aether-spi",
      "title": "EPL-1.0 license",
      "description": "EPL-1.0 license",
      "publicationTime": "2019-04-17T10:31:51.541Z",
      "creationTime": "2019-04-17T10:31:51.541Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.eclipse.aether:aether-spi@0.9.0.M3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.eclipse.aether:aether-spi",
      "version": "0.9.0.M3"
    },
    {
      "license": "EPL-1.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.eclipse.aether:aether-spi:EPL-1.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.eclipse.aether:aether-spi",
      "title": "EPL-1.0 license",
      "description": "EPL-1.0 license",
      "publicationTime": "2019-04-17T10:31:51.541Z",
      "creationTime": "2019-04-17T10:31:51.541Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.eclipse.aether:aether-spi@0.9.0.M3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.eclipse.aether:aether-spi",
      "version": "0.9.0.M3"
    },
    {
      "license": "EPL-1.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.eclipse.aether:aether-transport-wagon:EPL-1.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.eclipse.aether:aether-transport-wagon",
      "title": "EPL-1.0 license",
      "description": "EPL-1.0 license",
      "publicationTime": "2019-04-17T10:31:51.833Z",
      "creationTime": "2019-04-17T10:31:51.833Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.eclipse.aether:aether-transport-wagon@0.9.0.M3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.eclipse.aether:aether-transport-wagon",
      "version": "0.9.0.M3"
    },
    {
      "license": "EPL-1.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.eclipse.aether:aether-transport-wagon:EPL-1.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.eclipse.aether:aether-transport-wagon",
      "title": "EPL-1.0 license",
      "description": "EPL-1.0 license",
      "publicationTime": "2019-04-17T10:31:51.833Z",
      "creationTime": "2019-04-17T10:31:51.833Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.eclipse.aether:aether-transport-wagon@0.9.0.M3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.eclipse.aether:aether-transport-wagon",
      "version": "0.9.0.M3"
    },
    {
      "license": "EPL-1.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.eclipse.aether:aether-util:EPL-1.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.eclipse.aether:aether-util",
      "title": "EPL-1.0 license",
      "description": "EPL-1.0 license",
      "publicationTime": "2019-04-17T10:31:51.904Z",
      "creationTime": "2019-04-17T10:31:51.904Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.eclipse.aether:aether-util@0.9.0.M3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.eclipse.aether:aether-util",
      "version": "0.9.0.M3"
    },
    {
      "license": "EPL-1.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.eclipse.aether:aether-util:EPL-1.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.eclipse.aether:aether-util",
      "title": "EPL-1.0 license",
      "description": "EPL-1.0 license",
      "publicationTime": "2019-04-17T10:31:51.904Z",
      "creationTime": "2019-04-17T10:31:51.904Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.eclipse.aether:aether-util@0.9.0.M3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.eclipse.aether:aether-util",
      "version": "0.9.0.M3"
    },
    {
      "license": "EPL-1.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.eclipse.sisu:org.eclipse.sisu.inject:EPL-1.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.eclipse.sisu:org.eclipse.sisu.inject",
      "title": "EPL-1.0 license",
      "description": "EPL-1.0 license",
      "publicationTime": "2019-04-17T10:43:24.222Z",
      "creationTime": "2019-04-17T10:43:24.222Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.eclipse.sisu:org.eclipse.sisu.plexus@0.3.3",
        "org.eclipse.sisu:org.eclipse.sisu.inject@0.3.3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.eclipse.sisu:org.eclipse.sisu.inject",
      "version": "0.3.3"
    },
    {
      "license": "EPL-1.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.eclipse.sisu:org.eclipse.sisu.inject:EPL-1.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.eclipse.sisu:org.eclipse.sisu.inject",
      "title": "EPL-1.0 license",
      "description": "EPL-1.0 license",
      "publicationTime": "2019-04-17T10:43:24.222Z",
      "creationTime": "2019-04-17T10:43:24.222Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.eclipse.sisu:org.eclipse.sisu.plexus@0.3.3",
        "org.eclipse.sisu:org.eclipse.sisu.inject@0.3.3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.eclipse.sisu:org.eclipse.sisu.inject",
      "version": "0.3.3"
    },
    {
      "license": "EPL-1.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.eclipse.sisu:org.eclipse.sisu.plexus:EPL-1.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.eclipse.sisu:org.eclipse.sisu.plexus",
      "title": "EPL-1.0 license",
      "description": "EPL-1.0 license",
      "publicationTime": "2019-04-17T10:43:24.468Z",
      "creationTime": "2019-04-17T10:43:24.468Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.eclipse.sisu:org.eclipse.sisu.plexus@0.3.3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.eclipse.sisu:org.eclipse.sisu.plexus",
      "version": "0.3.3"
    },
    {
      "license": "EPL-1.0",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.eclipse.sisu:org.eclipse.sisu.plexus:EPL-1.0",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.eclipse.sisu:org.eclipse.sisu.plexus",
      "title": "EPL-1.0 license",
      "description": "EPL-1.0 license",
      "publicationTime": "2019-04-17T10:43:24.468Z",
      "creationTime": "2019-04-17T10:43:24.468Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/EPL-1.0.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:maven-plugin@2.14",
        "org.eclipse.sisu:org.eclipse.sisu.plexus@0.3.3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.eclipse.sisu:org.eclipse.sisu.plexus",
      "version": "0.3.3"
    },
    {
      "license": "LGPL-2.1",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.samba.jcifs:jcifs:LGPL-2.1",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.samba.jcifs:jcifs",
      "title": "LGPL-2.1 license",
      "description": "LGPL-2.1 license",
      "publicationTime": "2019-04-17T12:23:56.134Z",
      "creationTime": "2019-04-17T12:23:56.134Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/LGPL-2.1.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.kohsuke.jinterop:j-interop@2.0.6-kohsuke-1",
        "org.kohsuke.jinterop:j-interopdeps@2.0.6-kohsuke-1",
        "org.samba.jcifs:jcifs@1.3.17-kohsuke-1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.samba.jcifs:jcifs",
      "version": "1.3.17-kohsuke-1"
    },
    {
      "license": "LGPL-2.1",
      "semver": {
        "vulnerable": [
          "[0,)"
        ]
      },
      "id": "snyk:lic:maven:org.samba.jcifs:jcifs:LGPL-2.1",
      "type": "license",
      "packageManager": "maven",
      "language": "java",
      "packageName": "org.samba.jcifs:jcifs",
      "title": "LGPL-2.1 license",
      "description": "LGPL-2.1 license",
      "publicationTime": "2019-04-17T12:23:56.134Z",
      "creationTime": "2019-04-17T12:23:56.134Z",
      "licenseTemplateUrl": "https://raw.githubusercontent.com/spdx/license-list/master/LGPL-2.1.txt",
      "severity": "medium",
      "from": [
        "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-war@2.170-SNAPSHOT",
        "org.jenkins-ci.main:jenkins-core@2.170-SNAPSHOT",
        "org.kohsuke.jinterop:j-interop@2.0.6-kohsuke-1",
        "org.kohsuke.jinterop:j-interopdeps@2.0.6-kohsuke-1",
        "org.samba.jcifs:jcifs@1.3.17-kohsuke-1"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.samba.jcifs:jcifs",
      "version": "1.3.17-kohsuke-1"
    }
  ],
  "ok": false,
  "dependencyCount": 216,
  "org": "testorg",
  "policy": "# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.13.3\n# ignores vulnerabilities until expiry date; change duration by modifying expiry date\nignore:\n  SNYK-JAVA-ORGJENKINSCIPLUGINS-32150:\n    - '*':\n        reason: >-\n          Plugin is at version 1.23, and the vulnerability applies to 1.21 and\n          lower\n        expires: 2020-01-01T00:00:00.000Z\n        source: cli\npatch: {}\n",
  "isPrivate": true,
  "licensesPolicy": {
    "severities": {
      "MS-RL": "medium",
      "EPL-1.0": "medium",
      "GPL-2.0": "high",
      "GPL-3.0": "high",
      "MPL-1.1": "medium",
      "MPL-2.0": "medium",
      "AGPL-1.0": "high",
      "AGPL-3.0": "high",
      "CDDL-1.0": "medium",
      "LGPL-2.0": "medium",
      "LGPL-2.1": "medium",
      "LGPL-3.0": "medium",
      "CPOL-1.02": "high",
      "LGPL-2.1+": "medium",
      "LGPL-3.0+": "medium",
      "SimPL-2.0": "high",
      "Artistic-1.0": "medium",
      "Artistic-2.0": "medium"
    }
  },
  "packageManager": "maven",
  "ignoreSettings": {
    "adminOnly": false,
    "reasonRequired": true,
    "disregardFilesystemIgnores": false
  },
  "summary": "79 vulnerable dependency paths",
  "filesystemPolicy": true,
  "filtered": {
    "ignore": [
      {
        "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H",
        "alternativeIds": [],
        "creationTime": "2018-03-27T16:18:27.719000Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 8,
        "description": "## Overview\n[org.jenkins-ci.plugins:mailer](https://github.com/jenkinsci/mailer-plugin) is a Breakout of the default Mailer from the Jenkins core.\n\nAffected version of this package are vulnerable to Cross-site request forgery (CSRF). It allows remote authenticated users to send unauthorized mail as an arbitrary user via a `/descriptorByName/hudson.tasks.Mailer/sendTestMail` request.\n\n## Remediation\nUpgrade `org.jenkins-ci.plugins:mailer` to version 1.21 or higher.\n\n## References\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2018-03-26/)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2018-8718)\n",
        "disclosureTime": "2018-03-27T16:18:27.719000Z",
        "fixedIn": [],
        "functions": [],
        "id": "SNYK-JAVA-ORGJENKINSCIPLUGINS-32150",
        "identifiers": {
          "CVE": [
            "CVE-2018-8718"
          ],
          "CWE": [
            "CWE-352"
          ]
        },
        "language": "java",
        "mavenModuleName": {
          "artifactId": "mailer",
          "groupId": "org.jenkins-ci.plugins"
        },
        "modificationTime": "2019-02-06T08:03:07.516590Z",
        "moduleName": "org.jenkins-ci.plugins:mailer",
        "packageManager": "maven",
        "packageName": "org.jenkins-ci.plugins:mailer",
        "patches": [],
        "publicationTime": "2018-04-01T14:18:01.093000Z",
        "references": [
          {
            "title": "Jenkins Security Advisory",
            "url": "https://jenkins.io/security/advisory/2018-03-26/"
          },
          {
            "title": "NVD",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-8718"
          }
        ],
        "semver": {
          "vulnerable": [
            "[,1.21)"
          ]
        },
        "severity": "high",
        "title": "Cross-site Request Forgery (CSRF)",
        "from": [
          "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
          "org.jenkins-ci.main:jenkins-test@2.170-SNAPSHOT",
          "org.jenkins-ci.main:maven-plugin@2.14",
          "org.jenkins-ci.plugins:mailer@1.7"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "org.jenkins-ci.plugins:mailer",
        "version": "1.7",
        "filtered": {
          "ignored": [
            {
              "reason": "Plugin is at version 1.23, and the vulnerability applies to 1.21 and lower",
              "expires": "2020-01-01T00:00:00.000Z",
              "source": "cli",
              "path": [
                "*"
              ]
            }
          ]
        }
      },
      {
        "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H",
        "alternativeIds": [],
        "creationTime": "2018-03-27T16:18:27.719000Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 8,
        "description": "## Overview\n[org.jenkins-ci.plugins:mailer](https://github.com/jenkinsci/mailer-plugin) is a Breakout of the default Mailer from the Jenkins core.\n\nAffected version of this package are vulnerable to Cross-site request forgery (CSRF). It allows remote authenticated users to send unauthorized mail as an arbitrary user via a `/descriptorByName/hudson.tasks.Mailer/sendTestMail` request.\n\n## Remediation\nUpgrade `org.jenkins-ci.plugins:mailer` to version 1.21 or higher.\n\n## References\n- [Jenkins Security Advisory](https://jenkins.io/security/advisory/2018-03-26/)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2018-8718)\n",
        "disclosureTime": "2018-03-27T16:18:27.719000Z",
        "fixedIn": [],
        "functions": [],
        "id": "SNYK-JAVA-ORGJENKINSCIPLUGINS-32150",
        "identifiers": {
          "CVE": [
            "CVE-2018-8718"
          ],
          "CWE": [
            "CWE-352"
          ]
        },
        "language": "java",
        "mavenModuleName": {
          "artifactId": "mailer",
          "groupId": "org.jenkins-ci.plugins"
        },
        "modificationTime": "2019-02-06T08:03:07.516590Z",
        "moduleName": "org.jenkins-ci.plugins:mailer",
        "packageManager": "maven",
        "packageName": "org.jenkins-ci.plugins:mailer",
        "patches": [],
        "publicationTime": "2018-04-01T14:18:01.093000Z",
        "references": [
          {
            "title": "Jenkins Security Advisory",
            "url": "https://jenkins.io/security/advisory/2018-03-26/"
          },
          {
            "title": "NVD",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2018-8718"
          }
        ],
        "semver": {
          "vulnerable": [
            "[,1.21)"
          ]
        },
        "severity": "high",
        "title": "Cross-site Request Forgery (CSRF)",
        "from": [
          "org.jenkins-ci.main:jenkins-parent@2.170-SNAPSHOT",
          "org.jenkins-ci.main:jenkins-test-parent@2.170-SNAPSHOT",
          "org.jenkins-ci.main:maven-plugin@2.14",
          "org.jenkins-ci.plugins:mailer@1.7"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "name": "org.jenkins-ci.plugins:mailer",
        "version": "1.7",
        "filtered": {
          "ignored": [
            {
              "reason": "Plugin is at version 1.23, and the vulnerability applies to 1.21 and lower",
              "expires": "2020-01-01T00:00:00.000Z",
              "source": "cli",
              "path": [
                "*"
              ]
            }
          ]
        }
      }
    ],
    "patch": []
  },
  "uniqueCount": 39,
  "path": "/Users/myuser/gitrepos/madchap/jenkins"
}
